<div id="pf8d" class="pf w0 h0" data-page-no="8d"><div class="pc pc8d w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg8d.png"/><div class="t m0 x9 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">Peripheral Doze can therefore be used to disable selected bus masters or slaves for the</div><div class="t m0 x9 hf yf7 ff3 fs5 fc0 sc0 ls0 ws0">duration of WAIT or VLPW mode. It can also be used to disable selected bus slaves</div><div class="t m0 x9 hf yf8 ff3 fs5 fc0 sc0 ls0 ws0">immediately on entry into any stop mode (or Compute Operation), instead of waiting for</div><div class="t m0 x9 hf yf9 ff3 fs5 fc0 sc0 ls0 ws0">the bus masters to acknowledge the entry as part of the stop entry sequence. Finally, it</div><div class="t m0 x9 hf yfa ff3 fs5 fc0 sc0 ls0 ws0">can be used to disable selected bus masters or slaves that should remain inactive during a</div><div class="t m0 x9 hf yfb ff3 fs5 fc0 sc0 ls0 ws0">DMA wakeup.</div><div class="t m0 x9 hf yabd ff3 fs5 fc0 sc0 ls0 ws0">If the Flash is not being accessed during WAIT and PSTOP modes, then the Flash Doze</div><div class="t m0 x9 hf y644 ff3 fs5 fc0 sc0 ls0 ws0">mode can be used to reduce power consumption, at the expense of a slightly longer</div><div class="t m0 x9 hf y645 ff3 fs5 fc0 sc0 ls0 ws0">wakeup when executing code and vectors from Flash. It can also be used to reduce power</div><div class="t m0 x9 hf y646 ff3 fs5 fc0 sc0 ls0 ws0">consumption during Compute Operation when executing code and vectors from SRAM.</div><div class="t m0 x9 he yabe ff1 fs1 fc0 sc0 ls0 ws0">7.2.5<span class="_ _b"> </span>Clock Gating</div><div class="t m0 x9 hf y952 ff3 fs5 fc0 sc0 ls0 ws0">To conserve power, the clocks to most modules can be turned off using the SCGCx</div><div class="t m0 x9 hf yabf ff3 fs5 fc0 sc0 ls0 ws0">registers in the SIM module. These bits are cleared after any reset, which disables the</div><div class="t m0 x9 hf yac0 ff3 fs5 fc0 sc0 ls0 ws0">clock to the corresponding module. Prior to initializing a module, set the corresponding</div><div class="t m0 x9 hf yb05 ff3 fs5 fc0 sc0 ls0 ws0">bit in the SCGCx register to enable the clock. Before turning off the clock, make sure to</div><div class="t m0 x9 hf yb06 ff3 fs5 fc0 sc0 ls0 ws0">disable the module. For more details, refer to the clock distribution and SIM chapters.</div><div class="t m0 x9 hd yb07 ff1 fs7 fc0 sc0 ls0 ws0">7.3<span class="_ _b"> </span>Power modes</div><div class="t m0 x9 hf y56f ff3 fs5 fc0 sc0 ls0 ws0">The power management controller (PMC) provides multiple power options to allow the</div><div class="t m0 x9 hf y570 ff3 fs5 fc0 sc0 ls0 ws0">user to optimize power consumption for the level of functionality needed.</div><div class="t m0 x9 hf y571 ff3 fs5 fc0 sc0 ls0 ws0">Depending on the stop requirements of the user application, a variety of stop modes are</div><div class="t m0 x9 hf yb08 ff3 fs5 fc0 sc0 ls0 ws0">available that provide state retention, partial power down or full power down of certain</div><div class="t m0 x9 hf yb09 ff3 fs5 fc0 sc0 ls0 ws0">logic and/or memory. I/O states are held in all modes of operation. The following table</div><div class="t m0 x9 hf yb0a ff3 fs5 fc0 sc0 ls0 ws0">compares the various power modes available.</div><div class="t m0 x9 hf yb0b ff3 fs5 fc0 sc0 ls0 ws0">For each run mode there is a corresponding wait and stop mode. Wait modes are similar</div><div class="t m0 x9 hf yb0c ff3 fs5 fc0 sc0 ls0 ws0">to ARM sleep modes. Stop modes (VLPS, STOP) are similar to ARM sleep deep mode.</div><div class="t m0 x9 hf yb0d ff3 fs5 fc0 sc0 ls0 ws0">The very low power run (VLPR) operating mode can drastically reduce runtime power</div><div class="t m0 x9 hf yb0e ff3 fs5 fc0 sc0 ls0 ws0">when the maximum bus frequency is not required to handle the application needs.</div><div class="t m0 xef h10 y141 ff1 fs4 fc0 sc0 ls0 ws0">Chapter 7 Power Management</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>141</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
