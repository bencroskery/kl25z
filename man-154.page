<div id="pf9a" class="pf w0 h0" data-page-no="9a"><div class="pc pc9a w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg9a.png"/><div class="t m0 xd3 h9 y1a5 ff1 fs2 fc0 sc0 ls0 ws0">Table 9-3.<span class="_ _1a"> </span>MDM-AP Control register assignments (continued)</div><div class="t m0 x9a h1e y1a6 ff1 fs4 fc0 sc0 ls0 ws22a">Bit Name<span class="_ _94"> </span>Secure<span class="fs9 fc1 ls1a0 v4">1</span>Description</div><div class="t m0 x4b h7 y1a7 ff2 fs4 fc0 sc0 ls0 ws0">2<span class="_ _8"> </span>Debug Request<span class="_ _159"> </span>N<span class="_ _3d"> </span>Set to force the core to halt.</div><div class="t m0 x44 h7 y4e6 ff2 fs4 fc0 sc0 ls0 ws0">If the core is in a stop or wait mode, this bit can be used to wakeup the</div><div class="t m0 x44 h7 y918 ff2 fs4 fc0 sc0 ls0 ws0">core and transition to a halted state.</div><div class="t m0 x4b h7 yc23 ff2 fs4 fc0 sc0 ls0 ws0">3<span class="_ _8"> </span>System Reset Request<span class="_ _93"> </span>Y<span class="_ _52"> </span>Set to force a system reset. The system remains held in reset until this</div><div class="t m0 x44 h7 yc24 ff2 fs4 fc0 sc0 ls0 ws0">bit is cleared.</div><div class="t m0 x4b h7 yc25 ff2 fs4 fc0 sc0 ls0 ws0">4<span class="_ _8"> </span>Core Hold Reset<span class="_ _86"> </span>N<span class="_ _3d"> </span>Configuration bit to control core operation at the end of system reset</div><div class="t m0 x44 h7 yc26 ff2 fs4 fc0 sc0 ls0">sequencing.</div><div class="t m0 x44 h7 yc27 ff2 fs4 fc0 sc0 ls0 ws0">0 Normal operation - release the core from reset along with the rest of</div><div class="t m0 x44 h7 yc28 ff2 fs4 fc0 sc0 ls0 ws0">the system at the end of system reset sequencing.</div><div class="t m0 x44 h7 yc29 ff2 fs4 fc0 sc0 ls0 ws0">1 Suspend operation - hold the core in reset at the end of reset</div><div class="t m0 x44 h7 yc2a ff2 fs4 fc0 sc0 ls0 ws0">sequencing. Once the system enters this suspended state, clearing</div><div class="t m0 x44 h7 yc2b ff2 fs4 fc0 sc0 ls0 ws0">this control bit immediately releases the core from reset and CPU</div><div class="t m0 x44 h7 yc2c ff2 fs4 fc0 sc0 ls0 ws0">operation begins.</div><div class="t m0 x4b h7 yc2d ff2 fs4 fc0 sc0 ls0 ws0">5<span class="_ _8"> </span>VLLSx Debug Request</div><div class="t m0 x3a h7 yc2e ff2 fs4 fc0 sc0 ls0">(VLLDBGREQ)</div><div class="t m0 x1d h7 yc2d ff2 fs4 fc0 sc0 ls0 ws0">N<span class="_ _3d"> </span>Set to configure the system to be held in reset after the next recovery</div><div class="t m0 x44 h7 yc2e ff2 fs4 fc0 sc0 ls0 ws0">from a VLLSx mode. This bit is ignored on a VLLS wakeup via the</div><div class="t m0 x44 h7 yc2f ff2 fs4 fc0 sc0 ls0 ws0">Reset pin. During a VLLS wakeup via the Reset pin, the system can be</div><div class="t m0 x44 h7 yc30 ff2 fs4 fc0 sc0 ls0 ws0">held in reset by holding the reset pin asserted allowing the debugger to</div><div class="t m0 x44 h7 yc31 ff2 fs4 fc0 sc0 ls0 ws0">re-initialize the debug modules.</div><div class="t m0 x44 h7 yc32 ff2 fs4 fc0 sc0 ls0 ws0">This bit holds the system in reset when VLLSx modes are exited to</div><div class="t m0 x44 h7 yc33 ff2 fs4 fc0 sc0 ls0 ws0">allow the debugger time to re-initialize debug IP before the debug</div><div class="t m0 x44 h7 yc34 ff2 fs4 fc0 sc0 ls0 ws0">session continues.</div><div class="t m0 x44 h7 yc35 ff2 fs4 fc0 sc0 ls0 ws0">The Mode Controller captures this bit logic on entry to VLLSx modes.</div><div class="t m0 x44 h7 yc36 ff2 fs4 fc0 sc0 ls0 ws0">Upon exit from VLLSx modes, the Mode Controller will hold the system</div><div class="t m0 x44 h7 yc37 ff2 fs4 fc0 sc0 ls0 ws0">in reset until VLLDBGACK is asserted.</div><div class="t m0 x44 h7 yc38 ff2 fs4 fc0 sc0 ls0 ws0">The VLLDBGREQ bit clears automatically due to the POR reset</div><div class="t m0 x44 h7 yc39 ff2 fs4 fc0 sc0 ls0 ws0">generated as part of the VLLSx recovery.</div><div class="t m0 x4b h7 yc3a ff2 fs4 fc0 sc0 ls0 ws0">6<span class="_ _8"> </span>VLLSx Debug Acknowledge</div><div class="t m0 x3a h7 yc3b ff2 fs4 fc0 sc0 ls0">(VLLDBGACK)</div><div class="t m0 x1d h7 yc3a ff2 fs4 fc0 sc0 ls0 ws0">N<span class="_ _3d"> </span>Set to release a system being held in reset following a VLLSx recovery</div><div class="t m0 x44 h7 yc3c ff2 fs4 fc0 sc0 ls0 ws0">This bit is used by the debugger to release the system reset when it is</div><div class="t m0 x44 h7 yc3d ff2 fs4 fc0 sc0 ls0 ws0">being held on VLLSx mode exit. The debugger re-initializes all debug</div><div class="t m0 x44 h7 yc3e ff2 fs4 fc0 sc0 ls0 ws0">IP and then assert this control bit to allow the Mode Controller to</div><div class="t m0 x44 h7 yc3f ff2 fs4 fc0 sc0 ls0 ws0">release the system from reset and allow CPU operation to begin.</div><div class="t m0 x44 h7 yc40 ff2 fs4 fc0 sc0 ls0 ws0">The VLLDBGACK bit is cleared by the debugger or can be left set</div><div class="t m0 x44 h7 yc41 ff2 fs4 fc0 sc0 ls0 ws0">because it clears automatically due to the POR reset generated as part</div><div class="t m0 x44 h7 yc42 ff2 fs4 fc0 sc0 ls0 ws0">of the next VLLSx recovery.</div><div class="t m0 x4b h7 yc43 ff2 fs4 fc0 sc0 ls0 ws0">7<span class="_ _8"> </span>LLS, VLLSx Status Acknowledge<span class="_ _8"> </span>N<span class="_ _3d"> </span>Set this bit to acknowledge the DAP LLS and VLLS Status bits have</div><div class="t m0 x44 h7 yc44 ff2 fs4 fc0 sc0 ls0 ws0">been read. This acknowledge automatically clears the status bits.</div><div class="t m0 x44 h7 yc45 ff2 fs4 fc0 sc0 ls0 ws0">This bit is used by the debugger to clear the sticky LLS and VLLSx</div><div class="t m0 x44 h7 yc46 ff2 fs4 fc0 sc0 ls0 ws0">mode entry status bits. This bit is asserted and cleared by the</div><div class="t m0 x44 h7 yc47 ff2 fs4 fc0 sc0 ls0">debugger.</div><div class="t m0 x2c h7 yc48 ff2 fs4 fc0 sc0 ls0 ws0">8 â€“</div><div class="t m0 x2c h7 yc49 ff2 fs4 fc0 sc0 ls0">31</div><div class="t m0 x3a h7 yc48 ff2 fs4 fc0 sc0 ls0 ws0">Reserved for future use<span class="_ _1d"> </span>N</div><div class="t m0 x9 h7 yc4a ff2 fs4 fc0 sc0 ls0 ws0">1.<span class="_ _68"> </span>Command available in secure mode</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">SWD status and control registers</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">154<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div><a class="l" href="#pf9a" data-dest-detail='[154,"XYZ",null,139.5,null]'><div class="d m1" style="border-style:none;position:absolute;left:260.131000px;bottom:695.141000px;width:3.753000px;height:6.750000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
