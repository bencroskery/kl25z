<div id="pf112" class="pf w0 h0" data-page-no="112"><div class="pc pc112 w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg112.png"/><div class="t m0 x9 hd y150 ff1 fs7 fc0 sc0 ls0 ws0">17.3<span class="_ _b"> </span>Memory Map and Register Definition</div><div class="t m0 x9 hf y151 ff3 fs5 fc0 sc0 ls0 ws0">The BME module provides a memory-mapped capability and does not include any</div><div class="t m0 x9 hf y152 ff3 fs5 fc0 sc0 ls0 ws0">programming model registers. The exact set of functions supported by the BME are</div><div class="t m0 x9 hf y825 ff3 fs5 fc0 sc0 ls0 ws0">detailed in the <span class="fc1">Functional Description</span>.</div><div class="t m0 x9 hf y826 ff3 fs5 fc0 sc0 ls0 ws0">The peripheral address space occupies a 516 KB region: 512 KB based at 0x4000_0000</div><div class="t m0 x9 hf y827 ff3 fs5 fc0 sc0 ls0 ws0">plus a 4 KB space based at 0x400F_F000 for GPIO accesses; the decorated address space</div><div class="t m0 x9 hf y828 ff3 fs5 fc0 sc0 ls0 ws0">is mapped to the 448 MB region located at 0x4400_0000 - 0x5FFF_FFFF.</div><div class="t m0 x9 hd y1868 ff1 fs7 fc0 sc0 ls0 ws0">17.4<span class="_ _b"> </span>Functional Description</div><div class="t m0 x9 hf y1869 ff3 fs5 fc0 sc0 ls0 ws0">This section details the specific functions supported by the BME.</div><div class="t m0 x9 hf y186a ff3 fs5 fc0 sc0 ls0 ws0">Recall the combination of the basic load and store instructions of the Cortex-M</div><div class="t m0 x9 hf y1531 ff3 fs5 fc0 sc0 ls0 ws0">instruction set architecture (v6M, v7M) plus the concept of decorated storage provided by</div><div class="t m0 x9 hf yac1 ff3 fs5 fc0 sc0 ls0 ws0">the BME, the resulting implementation provides a robust and efficient read-modify-write</div><div class="t m0 x9 hf yac2 ff3 fs5 fc0 sc0 ls0 ws0">capability to this class of ultra low-end microcontrollers. The resulting architectural</div><div class="t m0 x9 hf yac3 ff3 fs5 fc0 sc0 ls0 ws0">capability defined by this core platform function is targeted at the manipulation of n-bit</div><div class="t m0 x9 hf yac4 ff3 fs5 fc0 sc0 ls0 ws0">fields in peripheral registers and is consistent with I/O hardware addressing in the</div><div class="t m0 x9 hf yac5 ff3 fs5 fc0 sc0 ls0 ws0">Embedded C standard. For most BME commands, a single core read or write bus cycle is</div><div class="t m0 x9 hf yac6 ff3 fs5 fc0 sc0 ls0 ws0">converted into an atomic read-modify-write, that is, an indivisible &quot;read followed by a</div><div class="t m0 x9 hf y186b ff3 fs5 fc0 sc0 ls0 ws0">write&quot; bus sequence.</div><div class="t m0 x9 hf yac8 ff3 fs5 fc0 sc0 ls0 ws0">Consider decorated store operations first, then decorated loads.</div><div class="t m0 x9 he y186c ff1 fs1 fc0 sc0 ls0 ws0">17.4.1<span class="_ _b"> </span>BME Decorated Stores</div><div class="t m0 x9 hf y186d ff3 fs5 fc0 sc0 ls0 ws0">The functions supported by the BME&apos;s decorated stores include three logical operators</div><div class="t m0 x9 hf y186e ff3 fs5 fc0 sc0 ls0 ws0">(AND, OR, XOR) plus a bit field insert. For all these operations, BME converts a single</div><div class="t m0 x9 hf y186f ff3 fs5 fc0 sc0 ls0 ws0">decorated AHB store transaction into a 2-cycle atomic read-modify-write sequence,</div><div class="t m0 x9 hf y1870 ff3 fs5 fc0 sc0 ls0 ws0">where the combined read-modify operation is performed in the first AHB data phase, and</div><div class="t m0 x9 hf y1871 ff3 fs5 fc0 sc0 ls0 ws0">then the write is performed in the second AHB data phase.</div><div class="t m0 x9 hf y1872 ff3 fs5 fc0 sc0 ls0 ws0">A generic timing diagram of a decorated store showing a bit field insert operation is</div><div class="t m0 x9 hf y1873 ff3 fs5 fc0 sc0 ls0 ws0">shown as follows:</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Memory Map and Register Definition</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">274<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div><a class="l" href="#pf112" data-dest-detail='[274,"XYZ",null,534.8,null]'><div class="d m1" style="border-style:none;position:absolute;left:136.824000px;bottom:617.400000px;width:128.716000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
