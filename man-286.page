<div id="pf11e" class="pf w0 h0" data-page-no="11e"><div class="pc pc11e w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg11e.png"/><div class="t m0 x9 h1b y2d7 ff1 fsc fc0 sc0 ls0 ws0">17.4.2.3<span class="_ _b"> </span>Decorated Load Unsigned Bit Field Extract (UBFX)</div><div class="t m0 x9 hf ybf ff3 fs5 fc0 sc0 ls0 ws0">This command extracts a bit field defined by LSB position (b) and the bit field width (w</div><div class="t m0 x9 hf y282 ff3 fs5 fc0 sc0 ls0 ws0">+1) from the memory &quot;container&quot; defined by the access size associated with the load</div><div class="t m0 x9 hf y283 ff3 fs5 fc0 sc0 ls0 ws0">instruction using a 2-cycle read sequence.</div><div class="t m0 x9 hf ya31 ff3 fs5 fc0 sc0 ls0 ws0">The extracted bit field from the memory address is right justified and zero filled in the</div><div class="t m0 x9 hf ya19 ff3 fs5 fc0 sc0 ls0 ws0">operand returned to the core. Recall this is the only decorated operation that does not</div><div class="t m0 x9 hf ya1a ff3 fs5 fc0 sc0 ls0 ws0">perform a memory write, that is, UBFX only performs a read.</div><div class="t m0 x9 hf y62c ff3 fs5 fc0 sc0 ls0 ws0">The data size is specified by the write operation and can be byte (8-bit), halfword (16-bit)</div><div class="t m0 x9 hf y14cd ff3 fs5 fc0 sc0 ls0 ws0">or word (32-bit). Note for the word sized operation, the maximum bit field width is 16</div><div class="t m0 x9 hf y1545 ff3 fs5 fc0 sc0 ls0">bits.</div><div class="t m0 x9 hf y14cf ff3 fs5 fc0 sc0 ls0 ws0">The use of a UBFX operation is recommended to extract a single bit from a peripheral.</div><div class="t m0 x9 hf y14d0 ff3 fs5 fc0 sc0 ls0 ws0">For this case, the w field is simply set to 0, indicating a bit field width of 1.</div><div class="c x9 y19b5 w30 hb7"><div class="t m19 x112 hb8 y19b6 ff2 fs59 fc0 sc0 ls0 ws2e7">31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10<span class="_ _186"> </span>9<span class="_ _189"> </span>8<span class="_ _18d"> </span>7<span class="_ _189"> </span>6<span class="_ _189"> </span>5<span class="_ _189"> </span>4<span class="_ _18d"> </span>3<span class="_ _189"> </span>2<span class="_ _189"> </span>1<span class="_ _189"> </span>0</div><div class="t m1c x0 hb9 y19b7 ff6 fs5a fc0 sc0 ls1d3 ws2e8">ioubfxb <span class="ff2 ls0 ws2e9">0<span class="_ _8f"> </span>1<span class="_ _8f"> </span>0<span class="_ _90"> </span>1<span class="_ _189"> </span>-<span class="_ _7"> </span>-<span class="_ _189"> </span>b<span class="_ _8f"> </span>b<span class="_ _8f"> </span>b<span class="_ _189"> </span>-<span class="_ _90"> </span>w w w<span class="_ _1aa"> </span>mem_addr</span></div><div class="t m1c x0 hba y19b8 ff6 fs5a fc0 sc0 ls1d3 ws2ea">ioubfxh <span class="ff2 ls0 ws2e9 v0">0<span class="_ _8f"> </span>1<span class="_ _8f"> </span>0<span class="_ _90"> </span>1<span class="_ _189"> </span>-<span class="_ _18d"> </span>b<span class="_ _90"> </span>b<span class="_ _90"> </span>b<span class="_ _8f"> </span>b<span class="_ _186"> </span>w w w w<span class="_ _1aa"> </span>mem_addr<span class="_ _a1"> </span>0</span></div><div class="t m1c x0 hbb y19b9 ff6 fs5a fc0 sc0 ls1d3 ws2e8">ioubfxw <span class="ff2 ls0 ws2e9 v0">0<span class="_ _8f"> </span>1<span class="_ _8f"> </span>0<span class="_ _90"> </span>1<span class="_ _8f"> </span>b<span class="_ _90"> </span>b<span class="_ _8f"> </span>b<span class="_ _90"> </span>b<span class="_ _8f"> </span>b<span class="_ _1a"> </span>w w w w<span class="_ _1aa"> </span>mem_addr<span class="_ _da"> </span>0<span class="_ _90"> </span>0</span></div></div><div class="t m0 xca h9 y19ba ff1 fs2 fc0 sc0 ls0 ws0">Figure 17-11. Decorated load address: unsigned bit field extract</div><div class="t m0 x9 hf y19bb ff3 fs5 fc0 sc0 ls0 ws0">where addr[28] = 1 specifies the unsigned bit field extract operation, addr[27:23] is &quot;b&quot;,</div><div class="t m0 x9 hf y19bc ff3 fs5 fc0 sc0 ls0 ws0">the LSB identifier, addr[22:19] is &quot;w&quot;, the bit field width minus 1 identifier, and</div><div class="t m0 x9 hf y19bd ff3 fs5 fc0 sc0 ls0 ws0">mem_addr[18:0] specifies the address offset into the peripheral space based at</div><div class="t m0 x9 hf y19be ff3 fs5 fc0 sc0 ls0 ws0">0x4000_0000. The &quot;-&quot; indicates an address bit &quot;don&apos;t care&quot;. Note, unlike the other</div><div class="t m0 x9 hf y19bf ff3 fs5 fc0 sc0 ls0 ws0">decorated load operations, UBFX uses addr[19] as the least significant bit in the &quot;w&quot;</div><div class="t m0 x9 hf y19c0 ff3 fs5 fc0 sc0 ls0 ws0">specifier and not as an address bit.</div><div class="t m0 x9 hf y19c1 ff3 fs5 fc0 sc0 ls0 ws0">The decorated unsigned bit field extract read operation is defined in the following</div><div class="t m0 x9 hf y19c2 ff3 fs5 fc0 sc0 ls0 ws0">pseudo-code as:</div><div class="t m0 x9 ha5 y19c3 ff6 fs4 fc0 sc0 ls0 ws0">rdata =  ioubfx&lt;sz&gt;(accessAddress)              // unsigned bit field extract</div><div class="t m0 x9 ha5 y19c4 ff6 fs4 fc0 sc0 ls0 ws0">tmp   =  mem[accessAddress &amp; 0xE007FFFF, size]  // memory read</div><div class="t m0 x9 ha5 y19c5 ff6 fs4 fc0 sc0 ls0 ws0">mask  = ((1 &lt;&lt; (w+1)) - 1) &lt;&lt; b                 // generate bit mask</div><div class="t m0 x9 ha5 y19c6 ff6 fs4 fc0 sc0 ls0 ws0">rdata = (tmp &amp;  mask) &gt;&gt; b                      // read data returned to core</div><div class="t m0 x9 hf y19c7 ff3 fs5 fc0 sc0 ls0 ws0">Like the BFI operation, when the starting bit position plus the field width exceeds the</div><div class="t m0 x9 hf y19c8 ff3 fs5 fc0 sc0 ls0 ws0">container size, only part of the source bit field is extracted from the destination memory</div><div class="t m0 x9 hf y19c9 ff3 fs5 fc0 sc0 ls0 ws0">location. Stated differently, if (b + w+1) &gt; container_width, only the low-order</div><div class="t m0 x9 hf y19ca ff3 fs5 fc0 sc0 ls0 ws0">&quot;container_width - b&quot; bits are actually extracted. The cycle-by-cycle BME operations are</div><div class="t m0 x9 hf y19cb ff3 fs5 fc0 sc0 ls0 ws0">detailed in the following table.</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional Description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">286<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
