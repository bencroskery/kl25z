<div id="pf120" class="pf w0 h0" data-page-no="120"><div class="pc pc120 w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg120.png"/><div class="t m0 x3d h9 y1a5 ff1 fs2 fc0 sc0 ls0 ws0">Table 17-8.<span class="_ _1a"> </span>Decorated peripheral and GPIO address details (continued)</div><div class="t m0 x91 h10 y1a6 ff1 fs4 fc0 sc0 ls0 ws0">Peripheral address space<span class="_ _b1"> </span>Description</div><div class="t m0 xc7 h7 y1a7 ff2 fs4 fc0 sc0 ls0 ws0">0x4400_0000 - 0x4FFF_FFFF<span class="_ _b"> </span>Decorated AND, OR, XOR, LAC1, LAS1 references to peripherals and GPIO based at</div><div class="t m0 x2a h7 y1a8 ff2 fs4 fc0 sc0 ls0 ws0">either 0x4000_F000 or 0x400F_F000</div><div class="t m0 xc7 h7 y2b4 ff2 fs4 fc0 sc0 ls0 ws0">0x5000_0000 - 0x5FFF_FFFF<span class="_ _b"> </span>Decorated BFI, UBFX references to peripherals and GPIO only based at 0x4000_F000</div><div class="t m0 x9 hd y19d7 ff1 fs7 fc0 sc0 ls0 ws0">17.5<span class="_ _b"> </span>Application Information</div><div class="t m0 x9 hf y19d8 ff3 fs5 fc0 sc0 ls0 ws0">In this section, GNU assembler macros with C expression operands are presented as</div><div class="t m0 x9 hf y19d9 ff3 fs5 fc0 sc0 ls0 ws0">examples of the required instructions to perform decorated operations. This section</div><div class="t m0 x9 hf y19da ff3 fs5 fc0 sc0 ls0 ws0">specifically presents a partial bme.h file defining the assembly language expressions for</div><div class="t m0 x9 hf y19db ff3 fs5 fc0 sc0 ls0 ws0">decorated logical stores: AND, OR and XOR. Comparable functions for BFI and the</div><div class="t m0 x9 hf y19dc ff3 fs5 fc0 sc0 ls0 ws0">decorated loads are more complex and available in the complete BME header file.</div><div class="t m0 x9 hf y19dd ff3 fs5 fc0 sc0 ls0 ws0">These macros use the same function names presented in <span class="fc1">Functional Description</span>.</div><div class="t m0 x9 ha5 y19de ff6 fs4 fc0 sc0 ls0 ws0">#define IOANDW(ADDR,WDATA)          \</div><div class="t m0 x9 ha5 y19df ff6 fs4 fc0 sc0 ls0 ws0">    __asm(&quot;ldr    r3, =(1&lt;&lt;26);&quot;    \</div><div class="t m0 x9 ha5 y19e0 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;orr    r3, %[addr];&quot;     \</div><div class="t m0 x9 ha5 y19e1 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;mov    r2, %[wdata];&quot;    \</div><div class="t m0 x9 ha5 y19e2 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;str    r2, [r3];&quot;        \</div><div class="t m0 x9 ha5 y19e3 ff6 fs4 fc0 sc0 ls0 ws0">          :: [addr] &quot;r&quot; (ADDR), [wdata] &quot;r&quot; (WDATA) : &quot;r2&quot;, &quot;r3&quot;);</div><div class="t m0 x9 ha5 y19e4 ff6 fs4 fc0 sc0 ls0 ws0">#define IOANDH(ADDR,WDATA)          \</div><div class="t m0 x9 ha5 y19e5 ff6 fs4 fc0 sc0 ls0 ws0">    __asm(&quot;ldr    r3, =(1&lt;&lt;26);&quot;    \</div><div class="t m0 x9 ha5 y19e6 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;orr    r3, %[addr];&quot;     \</div><div class="t m0 x9 ha5 y19e7 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;mov    r2, %[wdata];&quot;    \</div><div class="t m0 x9 ha5 y19e8 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;strh   r2, [r3];&quot;        \</div><div class="t m0 x9 ha5 y19e9 ff6 fs4 fc0 sc0 ls0 ws0">          :: [addr] &quot;r&quot; (ADDR), [wdata] &quot;r&quot; (WDATA) : &quot;r2&quot;, &quot;r3&quot;);</div><div class="t m0 x9 ha5 y19ea ff6 fs4 fc0 sc0 ls0 ws0">#define IOANDB(ADDR,WDATA)          \</div><div class="t m0 x9 ha5 y19eb ff6 fs4 fc0 sc0 ls0 ws0">    __asm(&quot;ldr    r3, =(1&lt;&lt;26);&quot;    \</div><div class="t m0 x9 ha5 y19ec ff6 fs4 fc0 sc0 ls0 ws0">          &quot;orr    r3, %[addr];&quot;     \</div><div class="t m0 x9 ha5 y19ed ff6 fs4 fc0 sc0 ls0 ws0">          &quot;mov    r2, %[wdata];&quot;    \</div><div class="t m0 x9 ha5 y19ee ff6 fs4 fc0 sc0 ls0 ws0">          &quot;strb   r2, [r3];&quot;        \</div><div class="t m0 x9 ha5 y19ef ff6 fs4 fc0 sc0 ls0 ws0">          :: [addr] &quot;r&quot; (ADDR), [wdata] &quot;r&quot; (WDATA) : &quot;r2&quot;, &quot;r3&quot;);</div><div class="t m0 x9 ha5 y19f0 ff6 fs4 fc0 sc0 ls0 ws0">#define IOORW(ADDR,WDATA)           \</div><div class="t m0 x9 ha5 y19f1 ff6 fs4 fc0 sc0 ls0 ws0">    __asm(&quot;ldr    r3, =(1&lt;&lt;27);&quot;    \</div><div class="t m0 x9 ha5 y19f2 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;orr    r3, %[addr];&quot;     \</div><div class="t m0 x9 ha5 y19f3 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;mov    r2, %[wdata];&quot;    \</div><div class="t m0 x9 ha5 y19f4 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;str    r2, [r3];&quot;        \</div><div class="t m0 x9 ha5 y19f5 ff6 fs4 fc0 sc0 ls0 ws0">          :: [addr] &quot;r&quot; (ADDR), [wdata] &quot;r&quot; (WDATA) : &quot;r2&quot;, &quot;r3&quot;);</div><div class="t m0 x9 ha5 y19f6 ff6 fs4 fc0 sc0 ls0 ws0">#define IOORH(ADDR,WDATA)           \</div><div class="t m0 x9 ha5 y19f7 ff6 fs4 fc0 sc0 ls0 ws0">    __asm(&quot;ldr    r3, =(1&lt;&lt;27);&quot;    \</div><div class="t m0 x9 ha5 y19f8 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;orr    r3, %[addr];&quot;     \</div><div class="t m0 x9 ha5 y19f9 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;mov    r2, %[wdata];&quot;    \</div><div class="t m0 x9 ha5 y19fa ff6 fs4 fc0 sc0 ls0 ws0">          &quot;strh   r2, [r3];&quot;        \</div><div class="t m0 x9 ha5 y19fb ff6 fs4 fc0 sc0 ls0 ws0">          :: [addr] &quot;r&quot; (ADDR), [wdata] &quot;r&quot; (WDATA) : &quot;r2&quot;, &quot;r3&quot;);</div><div class="t m0 x9 ha5 y19fc ff6 fs4 fc0 sc0 ls0 ws0">#define IOORB(ADDR,WDATA)           \</div><div class="t m0 x9 ha5 y19fd ff6 fs4 fc0 sc0 ls0 ws0">    __asm(&quot;ldr    r3, =(1&lt;&lt;27);&quot;    \</div><div class="t m0 x9 ha5 y19fe ff6 fs4 fc0 sc0 ls0 ws0">          &quot;orr    r3, %[addr];&quot;     \</div><div class="t m0 x9 ha5 y19ff ff6 fs4 fc0 sc0 ls0 ws0">          &quot;mov    r2, %[wdata];&quot;    \</div><div class="t m0 x9 ha5 y1a00 ff6 fs4 fc0 sc0 ls0 ws0">          &quot;strb   r2, [r3];&quot;        \</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Application Information</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">288<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div><a class="l" href="#pf112" data-dest-detail='[274,"XYZ",null,534.8,null]'><div class="d m1" style="border-style:none;position:absolute;left:370.876000px;bottom:456.000000px;width:128.716000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
