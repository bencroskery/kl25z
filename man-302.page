<div id="pf12e" class="pf w0 h0" data-page-no="12e"><div class="pc pc12e w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg12e.png"/><div class="t m0 x2 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Destination address field set to bits[31:1] of the EXC_RETURN value. See the</div><div class="t m0 x3d hf yf7 ff3 fs5 fc0 sc0 ls0 ws0">ARM v6-M Architecture Reference Manual.</div><div class="t m0 x2 hf yf8 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>The A-bit set to 0.</div><div class="t m0 x33 hf y1b0a ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>The second packet has the:</div><div class="t m0 x2 hf y1b0b ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Source address field set to bits[31:1] of the EXC_RETURN value.</div><div class="t m0 x2 hf y1b0c ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Destination address field set to the address of the instruction where execution</div><div class="t m0 x3d hf y1b0d ff3 fs5 fc0 sc0 ls0">commences.</div><div class="t m0 x2 hf y1b0e ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>A-bit set to 1.&quot;</div><div class="t m0 x9 hf y1b0f ff3 fs5 fc0 sc0 ls0 ws0">Given the recorded change-of-flow trace packets in system RAM and the memory image</div><div class="t m0 x9 hf y1b10 ff3 fs5 fc0 sc0 ls0 ws0">of the application, a debugger can read out the data and create an instruction-by-</div><div class="t m0 x9 hf y1b11 ff3 fs5 fc0 sc0 ls0 ws0">instruction program trace. In keeping with the low area and power implementation cost</div><div class="t m0 x9 hf y1b12 ff3 fs5 fc0 sc0 ls0 ws0">design targets, the MTB trace format is less efficient than other CoreSight trace modules,</div><div class="t m0 x9 hf y1b13 ff3 fs5 fc0 sc0 ls0 ws0">for example, the ETM (Embedded Trace Macrocell). Since each branch packet is 8 bytes</div><div class="t m0 x9 hf y1b14 ff3 fs5 fc0 sc0 ls0 ws0">in size, a 1 KB block of system RAM can contain 128 branches. Using the Dhrystone 2.1</div><div class="t m0 x9 hf y1b15 ff3 fs5 fc0 sc0 ls0 ws0">benchmark&apos;s dynamic runtime as an example, this corresponds to about 875 instructions</div><div class="t m0 x9 hf ya63 ff3 fs5 fc0 sc0 ls0 ws0">per KB of trace RAM, or with a zero wait state memory, this corresponds to</div><div class="t m0 x9 hf ya64 ff3 fs5 fc0 sc0 ls0 ws0">approximately 1600 processor cycles per KB. This metric is obviously very sensitive to</div><div class="t m0 x9 hf ya65 ff3 fs5 fc0 sc0 ls0 ws0">the runtime characteristics of the user code.</div><div class="t m0 x9 hf y1789 ff3 fs5 fc0 sc0 ls0 ws0">The MTB_DWT function (not shown in the core platform block diagram) monitors the</div><div class="t m0 x9 hf y178a ff3 fs5 fc0 sc0 ls0 ws0">processor address and data buses so that configurable watchpoints can be detected to</div><div class="t m0 x9 hf y1b16 ff3 fs5 fc0 sc0 ls0 ws0">trigger the appropriate response in the MTB recording.</div><div class="t m0 x9 he y1b17 ff1 fs1 fc0 sc0 ls0 ws18f">19.1.2 Features</div><div class="t m0 x9 hf y1b18 ff3 fs5 fc0 sc0 ls0 ws0">The key features of the MTB_RAM and MTB_DWT include:</div><div class="t m0 x33 hf y1b19 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Memory controller for system RAM and Micro Trace Buffer for program trace</div><div class="t m0 x117 hf y1b1a ff3 fs5 fc0 sc0 ls0">packets</div><div class="t m0 x33 hf y1b1b ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Read/write capabilities for system RAM accesses, write-only for program trace</div><div class="t m0 x117 hf y1b1c ff3 fs5 fc0 sc0 ls0">packets</div><div class="t m0 x33 hf y1b1d ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Supports zero wait state response to system bus accesses when no trace data is being</div><div class="t m0 x117 hf y1b1e ff3 fs5 fc0 sc0 ls0">written</div><div class="t m0 x33 hf y1b1f ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Can buffer two AHB address phases and one data write for system RAM accesses</div><div class="t m0 x33 hf yf36 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Supports 64-bit program trace packets including source and destination instruction</div><div class="t m0 x117 hf y1b20 ff3 fs5 fc0 sc0 ls0">addresses</div><div class="t m0 x33 hf y1b21 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Program trace information in RAM available to MCU&apos;s application code or external</div><div class="t m0 x117 hf y1b22 ff3 fs5 fc0 sc0 ls0">debugger</div><div class="t m0 x33 hf y1b23 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Program trace watchpoint configuration accessible by MCU&apos;s application code or</div><div class="t m0 x117 hf y1b24 ff3 fs5 fc0 sc0 ls0">debugger</div><div class="t m0 x33 hf y1b25 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Location and size of RAM trace buffer is configured by software</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0">Introduction</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">302<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
