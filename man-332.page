<div id="pf14c" class="pf w0 h0" data-page-no="14c"><div class="pc pc14c w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg14c.png"/><div class="t m0 x9 hd y150 ff1 fs7 fc0 sc0 ls0 ws0">20.3<span class="_ _b"> </span>Functional Description</div><div class="t m0 x9 he y1d5c ff1 fs1 fc0 sc0 ls0 ws0">20.3.1<span class="_ _b"> </span>General operation</div><div class="t m0 x9 hf y6dc ff3 fs5 fc0 sc0 ls0 ws0">When a master accesses the crossbar switch the access is immediately taken. If the</div><div class="t m0 x9 hf y6dd ff3 fs5 fc0 sc0 ls0 ws0">targeted slave port of the access is available, then the access is immediately presented on</div><div class="t m0 x9 hf y1d5d ff3 fs5 fc0 sc0 ls0 ws0">the slave port. Single-clock or zero-wait-state accesses are possible through the crossbar.</div><div class="t m0 x9 hf y1d5e ff3 fs5 fc0 sc0 ls0 ws0">If the targeted slave port of the access is busy or parked on a different master port, the</div><div class="t m0 x9 hf y1d5f ff3 fs5 fc0 sc0 ls0 ws0">requesting master simply sees wait states inserted until the targeted slave port can service</div><div class="t m0 x9 hf y1d60 ff3 fs5 fc0 sc0 ls0 ws0">the master&apos;s request. The latency in servicing the request depends on each master&apos;s</div><div class="t m0 x9 hf y1d61 ff3 fs5 fc0 sc0 ls0 ws0">priority level and the responding slave&apos;s access time.</div><div class="t m0 x9 hf y1d62 ff3 fs5 fc0 sc0 ls0 ws0">Because the crossbar switch appears to be just another slave to the master device, the</div><div class="t m0 x9 hf y1d63 ff3 fs5 fc0 sc0 ls0 ws0">master device has no knowledge of whether it actually owns the slave port it is targeting.</div><div class="t m0 x9 hf y1d64 ff3 fs5 fc0 sc0 ls0 ws0">While the master does not have control of the slave port it is targeting, it simply waits.</div><div class="t m0 x9 hf y1d65 ff3 fs5 fc0 sc0 ls0 ws0">A master is given control of the targeted slave port only after a previous access to a</div><div class="t m0 x9 hf y1d66 ff3 fs5 fc0 sc0 ls0 ws0">different slave port completes, regardless of its priority on the newly targeted slave port.</div><div class="t m0 x9 hf y1d67 ff3 fs5 fc0 sc0 ls0 ws0">This prevents deadlock from occurring when:</div><div class="t m0 x33 hf y1d68 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>A higher priority master has:</div><div class="t m0 x2 hf y1d69 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>An outstanding request to one slave port that has a long response time and</div><div class="t m0 x2 hf y1d6a ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>A pending access to a different slave port, and</div><div class="t m0 x33 hf y1d6b ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>A lower priority master is also making a request to the same slave port as the pending</div><div class="t m0 x117 hf y1d6c ff3 fs5 fc0 sc0 ls0 ws0">access of the higher priority master.</div><div class="t m0 x9 hf y1d6d ff3 fs5 fc0 sc0 ls0 ws0">After the master has control of the slave port it is targeting, the master remains in control</div><div class="t m0 x9 hf y1d6e ff3 fs5 fc0 sc0 ls0 ws0">of the slave port until it relinquishes the slave port by running an IDLE cycle or by</div><div class="t m0 x9 hf y1d6f ff3 fs5 fc0 sc0 ls0 ws0">targeting a different slave port for its next access.</div><div class="t m0 x9 hf y1d70 ff3 fs5 fc0 sc0 ls0 ws0">The master can also lose control of the slave port if another higher-priority master makes</div><div class="t m0 x9 hf y1d71 ff3 fs5 fc0 sc0 ls0 ws0">a request to the slave port.</div><div class="t m0 x9 hf y1d72 ff3 fs5 fc0 sc0 ls0 ws0">The crossbar terminates all master IDLE transfers, as opposed to allowing the termination</div><div class="t m0 x9 hf y1d73 ff3 fs5 fc0 sc0 ls0 ws0">to come from one of the slave buses. Additionally, when no master is requesting access to</div><div class="t m0 x9 hf y1d74 ff3 fs5 fc0 sc0 ls0 ws0">a slave port, the crossbar drives IDLE transfers onto the slave bus, even though a default</div><div class="t m0 x9 hf y1d75 ff3 fs5 fc0 sc0 ls0 ws0">master may be granted access to the slave port.</div><div class="t m0 x9 hf y1d76 ff3 fs5 fc0 sc0 ls0 ws0">When a slave bus is being idled by the crossbar, it remains parked with the last master to</div><div class="t m0 x9 hf y1d77 ff3 fs5 fc0 sc0 ls0 ws0">use the slave port. This is done to save the initial clock of arbitration delay that otherwise</div><div class="t m0 x9 hf y1d78 ff3 fs5 fc0 sc0 ls0 ws0">would be seen if the master had to arbitrate to gain control of the slave port.</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional Description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">332<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
