<div id="pf156" class="pf w0 h0" data-page-no="156"><div class="pc pc156 w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg156.png"/><div class="t m0 x9 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">The DMA channel triggering capability allows the system to schedule regular DMA</div><div class="t m0 x9 hf yf7 ff3 fs5 fc0 sc0 ls0 ws0">transfers, usually on the transmit side of certain peripherals, without the intervention of</div><div class="t m0 x9 hf yf8 ff3 fs5 fc0 sc0 ls0 ws0">the processor. This trigger works by gating the request from the peripheral to the DMA</div><div class="t m0 x9 hf yf9 ff3 fs5 fc0 sc0 ls0 ws0">until a trigger event has been seen. This is illustrated in the following figure.</div><div class="c x94 y1e17 w36 hcd"><div class="t m0 xcf h7 y1e18 ff2 fs4 fc0 sc0 ls0 ws0">DMA request</div><div class="t m0 x0 h7 y1e19 ff2 fs4 fc0 sc0 ls0 ws0">Peripheral request</div><div class="t m0 x11c h7 y1e1a ff2 fs4 fc0 sc0 ls0 ws190">T<span class="_ _124"></span>r<span class="_ _5"></span>igger</div></div><div class="t m0 xd3 h9 y1e1b ff1 fs2 fc0 sc0 ls0 ws0">Figure 22-13. DMAMUX channel triggering: normal operation</div><div class="t m0 x9 hf y1e1c ff3 fs5 fc0 sc0 ls0 ws0">After the DMA request has been serviced, the peripheral will negate its request,</div><div class="t m0 x9 hf y1e1d ff3 fs5 fc0 sc0 ls0 ws0">effectively resetting the gating mechanism until the peripheral re-asserts its request AND</div><div class="t m0 x9 hf y1e1e ff3 fs5 fc0 sc0 ls0 ws0">the next trigger event is seen. This means that if a trigger is seen, but the peripheral is not</div><div class="t m0 x9 hf y1e1f ff3 fs5 fc0 sc0 ls0 ws0">requesting a transfer, then that trigger will be ignored. This situation is illustrated in the</div><div class="t m0 x9 hf y1e20 ff3 fs5 fc0 sc0 ls0 ws0">following figure.</div><div class="c x3a y1e21 w37 hce"><div class="t m0 xcd h7 y1e22 ff2 fs4 fc0 sc0 ls0 ws0">DMA request</div><div class="t m0 x0 h7 y1e23 ff2 fs4 fc0 sc0 ls0 ws0">Peripheral request</div><div class="t m0 x149 h7 y1e24 ff2 fs4 fc0 sc0 ls0 ws190">T<span class="_ _124"></span>r<span class="_ _5"></span>igger</div></div><div class="t m0 x67 h9 y1e25 ff1 fs2 fc0 sc0 ls0 ws0">Figure 22-14. DMAMUX channel triggering: ignored trigger</div><div class="t m0 x9 hf y1e26 ff3 fs5 fc0 sc0 ls0 ws0">This triggering capability may be used with any peripheral that supports DMA transfers,</div><div class="t m0 x9 hf y1e27 ff3 fs5 fc0 sc0 ls0 ws0">and is most useful for two types of situations:</div><div class="t m0 x33 hf y1e28 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Periodically polling external devices on a particular bus</div><div class="t m0 x117 hf y1e29 ff3 fs5 fc0 sc0 ls0 ws0">As an example, the transmit side of an SPI is assigned to a DMA channel with a</div><div class="t m0 x117 hf y1e2a ff3 fs5 fc0 sc0 ls0 ws0">trigger, as described above. After it has been set up, the SPI will request DMA</div><div class="t m0 x117 hf y1e2b ff3 fs5 fc0 sc0 ls0 ws0">transfers, presumably from memory, as long as its transmit buffer is empty. By using</div><div class="t m0 x117 h38 y1e2c ff3 fs5 fc0 sc0 ls0 ws0">a trigger on this channel, the SPI transfers can be automatically performed every 5<span class="ff2 ls142">μ</span>s</div><div class="t m0 x117 hf y1e2d ff3 fs5 fc0 sc0 ls0 ws0">(as an example). On the receive side of the SPI, the SPI and DMA can be configured</div><div class="t m0 x117 hf y1e2e ff3 fs5 fc0 sc0 ls0 ws0">to transfer receive data into memory, effectively implementing a method to</div><div class="t m0 x117 hf y1e2f ff3 fs5 fc0 sc0 ls0 ws0">periodically read data from external devices and transfer the results into memory</div><div class="t m0 x117 hf y1e30 ff3 fs5 fc0 sc0 ls0 ws0">without processor intervention.</div><div class="t m0 x33 hf y1e31 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Using the GPIO ports to drive or sample waveforms</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">342<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
