<div id="pf15d" class="pf w0 h0" data-page-no="15d"><div class="pc pc15d w0 h0"><img class="bi x0 ya5 w2 hb" alt="" src="bg15d.png"/><div class="t m0 x9 hc ya6 ff1 fs6 fc0 sc0 ls0 ws0">Chapter 23</div><div class="t m0 x9 hc ya7 ff1 fs6 fc0 sc0 ls0 ws0">DMA Controller Module</div><div class="t m0 x9 hd ya8 ff1 fs7 fc0 sc0 ls0 ws22c">23.1 Introduction</div><div class="t m0 x10e h8 yf1c ff1 fs5 fc0 sc0 ls0">NOTE</div><div class="t m0 x3e hf ya35 ff3 fs5 fc0 sc0 ls0 ws0">For the chip-specific implementation details of this module&apos;s</div><div class="t m0 x3e hf ya36 ff3 fs5 fc0 sc0 ls0 ws0">instances see the chip configuration information.</div><div class="t m0 x9 hf y132d ff3 fs5 fc0 sc0 ls0 ws0">This chapter describes the direct memory access (DMA) controller module. It provides an</div><div class="t m0 x9 hf y132e ff3 fs5 fc0 sc0 ls0 ws0">overview of the module and describes in detail its signals and programming model. The</div><div class="t m0 x9 hf y132f ff3 fs5 fc0 sc0 ls0 ws0">latter sections of this chapter describe operations, features, and supported data transfer</div><div class="t m0 x9 hf y1330 ff3 fs5 fc0 sc0 ls0 ws0">modes in detail.</div><div class="t m0 xda h8 y1eb3 ff1 fs5 fc0 sc0 ls0">Note</div><div class="t m0 x3e hf y1eb4 ff3 fs5 fc0 sc0 ls0 ws0">The designation <span class="ff4 ws1a6">n</span> is used throughout this section to refer to</div><div class="t m0 x3e hf y1eb5 ff3 fs5 fc0 sc0 ls0 ws0">registers or signals associated with one of the four identical</div><div class="t m0 x3e hf y1eb6 ff3 fs5 fc0 sc0 ls0 ws0">DMA channels: DMA0, DMA1, DMA2, or DMA3.</div><div class="t m0 x9 he y1eb7 ff1 fs1 fc0 sc0 ls0 ws18f">23.1.1 Overview</div><div class="t m0 x9 hf y15a3 ff3 fs5 fc0 sc0 ls0 ws0">The DMA controller module enables fast transfers of data, providing an efficient way to</div><div class="t m0 x9 hf y15a4 ff3 fs5 fc0 sc0 ls0 ws0">move blocks of data with minimal processor interaction. The DMA module, shown in the</div><div class="t m0 x9 hf y15a5 ff3 fs5 fc0 sc0 ls0 ws0">following figure, has four channels that allow 8-bit, 16-bit, or 32-bit data transfers. Each</div><div class="t m0 x9 hf y15a6 ff3 fs5 fc0 sc0 ls0 ws0">channel has a dedicated source address register (SAR<span class="ff4 ws1a6">n</span>), destination address register</div><div class="t m0 x9 hf y15a7 ff3 fs5 fc0 sc0 ls0 ws1a6">(DAR<span class="ff4">n</span><span class="ws0">), status register (DSR</span><span class="ff4">n</span><span class="ws0">), byte count register (BCR</span><span class="ff4">n</span><span class="ws0">), and control register</span></div><div class="t m0 x9 hf y15a8 ff3 fs5 fc0 sc0 ls0 ws1a6">(DCR<span class="ff4">n</span><span class="ws0">). Collectively, the combined program-visible registers associated with each</span></div><div class="t m0 x9 hf y15a9 ff3 fs5 fc0 sc0 ls0 ws0">channel define a transfer control descriptor (TCD). All transfers are dual address, moving</div><div class="t m0 x9 hf y15aa ff3 fs5 fc0 sc0 ls0 ws0">data from a source memory location to a destination memory location with the module</div><div class="t m0 x9 hf y15ab ff3 fs5 fc0 sc0 ls0 ws0">operating as a 32-bit bus master connected to the system bus. The programming model is</div><div class="t m0 x9 hf y15ac ff3 fs5 fc0 sc0 ls0 ws0">accessed through a 32-bit connection with the slave peripheral bus. DMA data transfers</div><div class="t m0 x9 hf y1eb8 ff3 fs5 fc0 sc0 ls0 ws0">may be explicitly initiated by software or by peripheral hardware requests.</div><div class="t m0 x8 h6 ybc ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ybd ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>349</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
