<div id="pf15f" class="pf w0 h0" data-page-no="15f"><div class="pc pc15f w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg15f.png"/><div class="t m0 x33 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Continuous-mode or cycle-steal transfers from software or peripheral initiation</div><div class="t m0 x33 hf y503 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Automatic hardware acknowledge/done indicator from each channel</div><div class="t m0 x33 hf y6d9 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Independent source and destination address registers</div><div class="t m0 x33 hf y6da ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Optional modulo addressing and automatic updates of source and destination</div><div class="t m0 x117 hf y6db ff3 fs5 fc0 sc0 ls0">addresses</div><div class="t m0 x33 hf y1ee9 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Independent transfer sizes for source and destination</div><div class="t m0 x33 hf y1eea ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Optional auto-alignment feature for source or destination accesses</div><div class="t m0 x33 hf y1eeb ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Optional automatic single or double channel linking</div><div class="t m0 x33 hf y1eec ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Programming model accessed via 32-bit slave peripheral bus</div><div class="t m0 x33 hf y1eed ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Channel arbitration on transfer boundaries using fixed priority scheme</div><div class="t m0 x9 hd y1eee ff1 fs7 fc0 sc0 ls0 ws0">23.2<span class="_ _b"> </span>DMA Transfer Overview</div><div class="t m0 x9 hf y1eef ff3 fs5 fc0 sc0 ls0 ws0">The DMA module can move data within system memory (including memory and</div><div class="t m0 x9 hf y1ef0 ff3 fs5 fc0 sc0 ls0 ws0">peripheral devices) with minimal processor intervention, greatly improving overall</div><div class="t m0 x9 hf y1ef1 ff3 fs5 fc0 sc0 ls0 ws0">system performance. The DMA module consists of four independent, functionally</div><div class="t m0 x9 hf y1ef2 ff3 fs5 fc0 sc0 ls0 ws0">equivalent channels, so references to DMA in this chapter apply to any of the channels. It</div><div class="t m0 x9 hf y1ef3 ff3 fs5 fc0 sc0 ls0 ws0">is not possible to address all four channels at once.</div><div class="t m0 x9 hf y1ef4 ff3 fs5 fc0 sc0 ls0 ws0">As soon as a channel has been initialized, it may be started by setting DCR<span class="ff4 ws1a6">n</span>[START] or</div><div class="t m0 x9 hf y1ef5 ff3 fs5 fc0 sc0 ls0 ws0">a properly-selected peripheral DMA request, depending on the status of DCR<span class="ff4 ws1a6">n</span>[ERQ].</div><div class="t m0 x9 hf y1ef6 ff3 fs5 fc0 sc0 ls0 ws0">The DMA controller supports dual-address transfers using its bus master connection to</div><div class="t m0 x9 hf y1ef7 ff3 fs5 fc0 sc0 ls0 ws0">the system bus. The DMA channels support transfers up to 32 data bits in size and have</div><div class="t m0 x9 hf y1ef8 ff3 fs5 fc0 sc0 ls0 ws0">the same memory map addressibility as the processor.</div><div class="t m0 x33 hf y1ef9 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Dual-address transfers—A dual-address transfer consists of a read followed by a</div><div class="t m0 x117 hf y1efa ff3 fs5 fc0 sc0 ls0 ws0">write and is initiated by a request using the DCRn[START] bit or by a peripheral</div><div class="t m0 x117 hf y1efb ff3 fs5 fc0 sc0 ls0 ws0">DMA request. The read data is temporarily held in the DMA channel hardware until</div><div class="t m0 x117 hf y1efc ff3 fs5 fc0 sc0 ls0 ws0">the write operation. Two types of single transfers occur: a read from a source address</div><div class="t m0 x117 hf y1efd ff3 fs5 fc0 sc0 ls0 ws0">followed by a write to a destination address. See the following figure.</div><div class="t m0 x4e h10 y141 ff1 fs4 fc0 sc0 ls0 ws0">Chapter 23 DMA Controller Module</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>351</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
