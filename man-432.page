<div id="pf1b0" class="pf w0 h0" data-page-no="1b0"><div class="pc pc1b0 w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg1b0.png"/><div class="t m0 x9a h6 y5f5 ff1 fs3 fc0 sc0 ls0 ws0">Program flash protection register<span class="_ _1d7"> </span>Flash Configuration Field offset address</div><div class="t m0 x89 h7 y8b6 ff2 fs4 fc0 sc0 ls0 ws35e">FPROT2 0x0009</div><div class="t m0 x89 h7 y934 ff2 fs4 fc0 sc0 ls0 ws35e">FPROT3 0x0008</div><div class="t m0 x9 hf y133c ff3 fs5 fc0 sc0 ls0 ws0">To change the program flash protection that is loaded during the reset sequence,</div><div class="t m0 x9 hf y133d ff3 fs5 fc0 sc0 ls0 ws0">unprotect the sector of program flash memory that contains the Flash Configuration</div><div class="t m0 x9 hf y264c ff3 fs5 fc0 sc0 ls0 ws0">Field. Then, reprogram the program flash protection byte.</div><div class="t m0 x9 h7 y264d ff2 fs4 fc0 sc0 ls0 ws0">Address: 4002_0000h base + 10h offset + (1d × i), where i=0d to 3d</div><div class="t m0 x81 h1d y264e ff2 fsd fc0 sc0 ls0 ws284">Bit<span class="_ _165"> </span>7 6 5 4 3 2 1 0</div><div class="t m0 x1 h7 yc50 ff2 fs4 fc0 sc0 ls0 ws35f">Read <span class="ve">PROT</span></div><div class="t m0 x8b h7 y264f ff2 fs4 fc0 sc0 ls0">Write</div><div class="t m0 x12c h7 y2650 ff2 fs4 fc0 sc0 ls0 ws328">Reset <span class="ws329 v1b">x* x* x* x* x* x* x* x*</span></div><div class="t m0 x9 h7 y2651 ff2 fs4 fc0 sc0 ls0 ws0">* Notes:</div><div class="t m0 x52 h7 y2652 ff2 fs4 fc0 sc0 ls0 ws0">x = Undefined at reset.<span class="_ _1b5"></span>•</div><div class="t m0 x1c h9 y2653 ff1 fs2 fc0 sc0 ls0 ws20b">FTFA_FPROT<span class="ff7">n</span><span class="ws0"> field descriptions</span></div><div class="t m0 x12c h10 y2654 ff1 fs4 fc0 sc0 ls0 ws259">Field Description</div><div class="t m0 x1 h7 yb54 ff2 fs4 fc0 sc0 ls0">7–0</div><div class="t m0 x95 h7 y2655 ff2 fs4 fc0 sc0 ls0">PROT</div><div class="t m0 x83 h7 yb54 ff2 fs4 fc0 sc0 ls0 ws0">Program Flash Region Protect</div><div class="t m0 x83 h7 y2656 ff2 fs4 fc0 sc0 ls0 ws0">Each program flash region can be protected from program and erase operations by setting the associated</div><div class="t m0 x83 h7 y2657 ff2 fs4 fc0 sc0 ls0 ws0">PROT bit.</div><div class="t m0 x83 h10 y2658 ff1 fs4 fc0 sc0 ls0 ws0">In NVM Normal mode:<span class="ff2"> The protection can only be increased, meaning that currently unprotected memory</span></div><div class="t m0 x83 h7 y2659 ff2 fs4 fc0 sc0 ls0 ws0">can be protected, but currently protected memory cannot be unprotected. Since unprotected regions are</div><div class="t m0 x83 h7 y265a ff2 fs4 fc0 sc0 ls0 ws0">marked with a 1 and protected regions use a 0, only writes changing 1s to 0s are accepted. This 1-to-0</div><div class="t m0 x83 h7 y265b ff2 fs4 fc0 sc0 ls0 ws0">transition check is performed on a bit-by-bit basis. Those FPROT bits with 1-to-0 transitions are accepted</div><div class="t m0 x83 h7 y265c ff2 fs4 fc0 sc0 ls0 ws0">while all bits with 0-to-1 transitions are ignored.</div><div class="t m0 x83 h10 y265d ff1 fs4 fc0 sc0 ls0 ws0">In NVM Special mode: <span class="ff2">All bits of FPROT are writable without restriction. Unprotected areas can be</span></div><div class="t m0 x83 h7 y265e ff2 fs4 fc0 sc0 ls0 ws0">protected and protected areas can be unprotected.</div><div class="t m0 x83 h10 y265f ff1 fs4 fc0 sc0 ls0 ws360">Restriction: <span class="ff2 ws0">The user must never write to any FPROT register while a command is running (CCIF=0).</span></div><div class="t m0 x83 h7 y2660 ff2 fs4 fc0 sc0 ls0 ws0">Trying to alter data in any protected area in the program flash memory results in a protection violation</div><div class="t m0 x83 h7 y2661 ff2 fs4 fc0 sc0 ls0 ws0">error and sets the FSTAT[FPVIOL] bit. A full block erase of a program flash block is not possible if it</div><div class="t m0 x83 h7 y2662 ff2 fs4 fc0 sc0 ls0 ws0">contains any protected region.</div><div class="t m0 x83 h7 y2663 ff2 fs4 fc0 sc0 ls0 ws0">Each bit in the 32-bit protection register represents 1/32 of the total program flash except for</div><div class="t m0 x83 h7 y2664 ff2 fs4 fc0 sc0 ls0 ws0">configurations where program flash memory is less than 32 Kbytes. For configurations with less than 32</div><div class="t m0 x83 h7 y2665 ff2 fs4 fc0 sc0 ls0 ws0">Kbytes of program flash memory, each assigned bit represents 1 Kbyte.</div><div class="t m0 x83 h7 y2666 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Program flash region is protected.</div><div class="t m0 x83 h7 y2667 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Program flash region is not protected</div><div class="t m0 x9 hd y2668 ff1 fs7 fc0 sc0 ls0 ws0">27.4<span class="_ _b"> </span>Functional Description</div><div class="t m0 x9 hf y2669 ff3 fs5 fc0 sc0 ls0 ws0">The following sections describe functional details of the flash memory module.</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional Description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">432<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",null,443.95,null]'><div class="d m1" style="border-style:none;position:absolute;left:321.499000px;bottom:551.700000px;width:25.002000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",null,514.95,null]'><div class="d m1" style="border-style:none;position:absolute;left:133.999000px;bottom:534.950000px;width:8.002000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",null,514.95,null]'><div class="d m1" style="border-style:none;position:absolute;left:189.999000px;bottom:534.950000px;width:8.002000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",null,514.95,null]'><div class="d m1" style="border-style:none;position:absolute;left:245.999000px;bottom:534.950000px;width:8.002000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",null,514.95,null]'><div class="d m1" style="border-style:none;position:absolute;left:301.875000px;bottom:534.950000px;width:8.000000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",null,514.95,null]'><div class="d m1" style="border-style:none;position:absolute;left:358.000000px;bottom:534.950000px;width:8.000000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",null,514.95,null]'><div class="d m1" style="border-style:none;position:absolute;left:414.000000px;bottom:534.950000px;width:8.000000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",null,514.95,null]'><div class="d m1" style="border-style:none;position:absolute;left:470.000000px;bottom:534.950000px;width:8.000000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1b0" data-dest-detail='[432,"XYZ",null,514.95,null]'><div class="d m1" style="border-style:none;position:absolute;left:526.000000px;bottom:534.950000px;width:8.000000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
