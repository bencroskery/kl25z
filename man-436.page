<div id="pf1b4" class="pf w0 h0" data-page-no="1b4"><div class="pc pc1b4 w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg1b4.png"/><div class="t m0 x9 h1b y502 ff1 fsc fc0 sc0 ls0 ws0">27.4.8.1<span class="_ _b"> </span>Command Write Sequence</div><div class="t m0 x9 hf y503 ff3 fs5 fc0 sc0 ls0 ws0">Flash commands are specified using a command write sequence illustrated in <span class="fc1">Figure</span></div><div class="t m0 x9 hf y504 ff3 fs5 fc1 sc0 ls0 ws1a6">27-25<span class="fc0 ws0">. The flash memory module performs various checks on the command (FCCOB)</span></div><div class="t m0 x9 hf y505 ff3 fs5 fc0 sc0 ls0 ws0">content and continues with command execution if all requirements are fulfilled.</div><div class="t m0 x9 hf y672 ff3 fs5 fc0 sc0 ls0 ws0">Before launching a command, the ACCERR and FPVIOL bits in the FSTAT register</div><div class="t m0 x9 hf y673 ff3 fs5 fc0 sc0 ls0 ws0">must be zero and the CCIF flag must read 1 to verify that any previous command has</div><div class="t m0 x9 hf y674 ff3 fs5 fc0 sc0 ls0 ws0">completed. If CCIF is zero, the previous command execution is still active, a new</div><div class="t m0 x9 hf y675 ff3 fs5 fc0 sc0 ls0 ws0">command write sequence cannot be started, and all writes to the FCCOB registers are</div><div class="t m0 x9 hf y676 ff3 fs5 fc0 sc0 ls0">ignored.</div><div class="t m0 x9 h8 y26a1 ff1 fs5 fc0 sc0 ls0 ws0">27.4.8.1.1<span class="_ _b"> </span>Load the FCCOB Registers</div><div class="t m0 x9 hf y26a2 ff3 fs5 fc0 sc0 ls0 ws0">The user must load the FCCOB registers with all parameters required by the desired flash</div><div class="t m0 x9 hf y26a3 ff3 fs5 fc0 sc0 ls0 ws0">command. The individual registers that make up the FCCOB data set can be written in</div><div class="t m0 x9 hf y26a4 ff3 fs5 fc0 sc0 ls0 ws0">any order.</div><div class="t m0 x9 h8 y26a5 ff1 fs5 fc0 sc0 ls0 ws0">27.4.8.1.2<span class="_ _b"> </span>Launch the Command by Clearing CCIF</div><div class="t m0 x9 hf y26a6 ff3 fs5 fc0 sc0 ls0 ws0">Once all relevant command parameters have been loaded, the user launches the command</div><div class="t m0 x9 hf y26a7 ff3 fs5 fc0 sc0 ls0 ws0">by clearing the FSTAT[CCIF] bit by writing a &apos;1&apos; to it. The CCIF flag remains zero until</div><div class="t m0 x9 hf y26a8 ff3 fs5 fc0 sc0 ls0 ws0">the flash command completes.</div><div class="t m0 x9 hf y26a9 ff3 fs5 fc0 sc0 ls0 ws0">The FSTAT register contains a blocking mechanism that prevents a new command from</div><div class="t m0 x9 hf y26aa ff3 fs5 fc0 sc0 ls0 ws0">launching (can&apos;t clear CCIF) if the previous command resulted in an access error</div><div class="t m0 x9 hf y26ab ff3 fs5 fc0 sc0 ls0 ws0">(FSTAT[ACCERR]=1) or a protection violation (FSTAT[FPVIOL]=1). In error</div><div class="t m0 x9 hf y26ac ff3 fs5 fc0 sc0 ls0 ws0">scenarios, two writes to FSTAT are required to initiate the next command: the first write</div><div class="t m0 x9 hf y26ad ff3 fs5 fc0 sc0 ls0 ws0">clears the error flags, the second write clears CCIF.</div><div class="t m0 x9 h8 y26ae ff1 fs5 fc0 sc0 ls0 ws0">27.4.8.1.3<span class="_ _b"> </span>Command Execution and Error Reporting</div><div class="t m0 x9 hf ybcf ff3 fs5 fc0 sc0 ls0 ws0">The command processing has several steps:</div><div class="t m0 xf6 hf y1791 ff3 fs5 fc0 sc0 ls0 ws0">1.<span class="_ _11"> </span>The flash memory module reads the command code and performs a series of</div><div class="t m0 x117 hf y1792 ff3 fs5 fc0 sc0 ls0 ws0">parameter checks and protection checks, if applicable, which are unique to each</div><div class="t m0 x117 hf y26af ff3 fs5 fc0 sc0 ls0">command.</div><div class="t m0 x117 hf y1794 ff3 fs5 fc0 sc0 ls0 ws0">If the parameter check fails, the FSTAT[ACCERR] (access error) flag is set.</div><div class="t m0 x117 hf y2025 ff3 fs5 fc0 sc0 ls0 ws0">ACCERR reports invalid instruction codes and out-of bounds addresses. Usually,</div><div class="t m0 x117 hf y2026 ff3 fs5 fc0 sc0 ls0 ws0">access errors suggest that the command was not set-up with valid parameters in the</div><div class="t m0 x117 hf y26b0 ff3 fs5 fc0 sc0 ls0 ws0">FCCOB register group.</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional Description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">436<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div><a class="l" href="#pf1b6" data-dest-detail='[438,"XYZ",null,723.6,null]'><div class="d m1" style="border-style:none;position:absolute;left:489.876000px;bottom:684.200000px;width:36.554000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1b6" data-dest-detail='[438,"XYZ",null,723.6,null]'><div class="d m1" style="border-style:none;position:absolute;left:54.000000px;bottom:668.200000px;width:32.662000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
