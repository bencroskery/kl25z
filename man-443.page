<div id="pf1bb" class="pf w0 h0" data-page-no="1bb"><div class="pc pc1bb w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg1bb.png"/><div class="t m0 x9 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">Upon clearing CCIF to launch the Program Check command, the flash memory module</div><div class="t m0 x9 hf yf7 ff3 fs5 fc0 sc0 ls0 ws0">sets the read margin for 1s according to <span class="fc1">Table 27-30</span>, reads the specified longword, and</div><div class="t m0 x9 hf yf8 ff3 fs5 fc0 sc0 ls0 ws0">compares the actual read data to the expected data provided by the FCCOB. If the</div><div class="t m0 x9 hf yf9 ff3 fs5 fc0 sc0 ls0 ws0">comparison at margin-1 fails, the FSTAT[MGSTAT0] bit is set.</div><div class="t m0 x9 hf y629 ff3 fs5 fc0 sc0 ls0 ws0">The flash memory module then sets the read margin for 0s, re-reads, and compares again.</div><div class="t m0 x9 hf y62a ff3 fs5 fc0 sc0 ls0 ws0">If the comparison at margin-0 fails, the FSTAT[MGSTAT0] bit is set. The CCIF flag is</div><div class="t m0 x9 hf yabd ff3 fs5 fc0 sc0 ls0 ws0">set after the Program Check operation completes.</div><div class="t m0 x9 hf y675 ff3 fs5 fc0 sc0 ls0 ws0">The supplied address must be longword aligned (the lowest two bits of the byte address</div><div class="t m0 x9 hf y676 ff3 fs5 fc0 sc0 ls0 ws0">must be 00):</div><div class="t m0 x33 hf y677 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Byte 3 data is written to the supplied byte address (&apos;start&apos;),</div><div class="t m0 x33 hf y26b1 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Byte 2 data is programmed to byte address start+0b01,</div><div class="t m0 x33 hf y26b2 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Byte 1 data is programmed to byte address start+0b10,</div><div class="t m0 x33 hf y26b3 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Byte 0 data is programmed to byte address start+0b11.</div><div class="t m0 x10e h8 y2746 ff1 fs5 fc0 sc0 ls0">NOTE</div><div class="t m0 x3e hf y2747 ff3 fs5 fc0 sc0 ls0 ws0">See the description of margin reads, <span class="fc1">Margin Read Commands</span></div><div class="t m0 x10c h9 y2748 ff1 fs2 fc0 sc0 ls0 ws0">Table 27-30.<span class="_ _1a"> </span>Margin Level Choices for Program Check</div><div class="t m0 xf6 h10 y2749 ff1 fs4 fc0 sc0 ls0 ws0">Read Margin Choice<span class="_ _b9"> </span>Margin Level Description</div><div class="t m0 x151 h7 y274a ff2 fs4 fc0 sc0 ls0 ws0">0x01<span class="_ _1e7"> </span>Read at &apos;User&apos; margin-1 and &apos;User&apos; margin-0</div><div class="t m0 x151 h7 y274b ff2 fs4 fc0 sc0 ls0 ws0">0x02<span class="_ _108"> </span>Read at &apos;Factory&apos; margin-1 and &apos;Factory&apos; margin-0</div><div class="t m0 xd7 h9 y274c ff1 fs2 fc0 sc0 ls0 ws0">Table 27-31.<span class="_ _1a"> </span>Program Check Command Error Handling</div><div class="t m0 x89 h10 y274d ff1 fs4 fc0 sc0 ls0 ws0">Error Condition<span class="_ _1df"> </span>Error Bit</div><div class="t m0 x2c h7 y274e ff2 fs4 fc0 sc0 ls0 ws0">Command not available in current mode/security<span class="_ _116"> </span>FSTAT[ACCERR]</div><div class="t m0 x2c h7 y274f ff2 fs4 fc0 sc0 ls0 ws0">An invalid flash address is supplied<span class="_ _1e1"> </span>FSTAT[ACCERR]</div><div class="t m0 x2c h7 y2750 ff2 fs4 fc0 sc0 ls0 ws0">Flash address is not longword aligned<span class="_ _1d9"> </span>FSTAT[ACCERR]</div><div class="t m0 x2c h7 ycc0 ff2 fs4 fc0 sc0 ls0 ws0">An invalid margin choice is supplied<span class="_ _1e8"> </span>FSTAT[ACCERR]</div><div class="t m0 x2c h7 y2751 ff2 fs4 fc0 sc0 ls0 ws0">Either of the margin reads does not match the expected data<span class="_ _d4"> </span>FSTAT[MGSTAT0]</div><div class="t m0 x9 h1b y2752 ff1 fsc fc0 sc0 ls0 ws0">27.4.10.3<span class="_ _b"> </span>Read Resource Command</div><div class="t m0 x9 hf y2753 ff3 fs5 fc0 sc0 ls0 ws0">The Read Resource command allows the user to read data from special-purpose memory</div><div class="t m0 x9 hf y2754 ff3 fs5 fc0 sc0 ls0 ws0">resources located within the flash memory module. The special-purpose memory</div><div class="t m0 x9 hf y2755 ff3 fs5 fc0 sc0 ls0 ws0">resources available include program flash IFR space and the Version ID field. Each</div><div class="t m0 x9 hf y2756 ff3 fs5 fc0 sc0 ls0 ws0">resource is assigned a select code as shown in <span class="fc1">Table 27-33</span>.</div><div class="t m0 x150 h10 y141 ff1 fs4 fc0 sc0 ls0 ws0">Chapter 27 Flash Memory Module (FTFA)</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>443</div><a class="l" href="#pf1bb" data-dest-detail='[443,"XYZ",null,448.4,null]'><div class="d m1" style="border-style:none;position:absolute;left:278.728000px;bottom:692.600000px;width:68.040000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1b8" data-dest-detail='[440,"XYZ",null,711.1,null]'><div class="d m1" style="border-style:none;position:absolute;left:330.904000px;bottom:457.800000px;width:140.770000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1bc" data-dest-detail='[444,"XYZ",null,479.1,null]'><div class="d m1" style="border-style:none;position:absolute;left:314.106000px;bottom:98.500100px;width:68.040000px;height:13.999900px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
