<div id="pf1c5" class="pf w0 h0" data-page-no="1c5"><div class="pc pc1c5 w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg1c5.png"/><div class="t m0 x9 h1b y502 ff1 fsc fc0 sc0 ls0 ws0">27.4.10.10<span class="_ _b"> </span>Verify Backdoor Access Key Command</div><div class="t m0 x9 hf y503 ff3 fs5 fc0 sc0 ls0 ws0">The Verify Backdoor Access Key command only executes if the mode and security</div><div class="t m0 x9 hf y504 ff3 fs5 fc0 sc0 ls0 ws0">conditions are satisfied (see <span class="fc1">Flash Commands by Mode</span>). Execution of the Verify</div><div class="t m0 x9 hf y505 ff3 fs5 fc0 sc0 ls0 ws0">Backdoor Access Key command is further qualified by the FSEC[KEYEN] bits. The</div><div class="t m0 x9 hf y629 ff3 fs5 fc0 sc0 ls0 ws0">Verify Backdoor Access Key command releases security if user-supplied keys in the</div><div class="t m0 x9 hf y62a ff3 fs5 fc0 sc0 ls0 ws0">FCCOB match those stored in the Backdoor Comparison Key bytes of the Flash</div><div class="t m0 x9 hf yabd ff3 fs5 fc0 sc0 ls0 ws0">Configuration Field (see <span class="fc1">Flash Configuration Field Description</span>). The column labelled</div><div class="t m0 x9 hf y644 ff3 fs5 fc0 sc0 ls0 ws0">Flash Configuration Field offset address shows the location of the matching byte in the</div><div class="t m0 x9 hf y645 ff3 fs5 fc0 sc0 ls0 ws0">Flash Configuration Field.</div><div class="t m0 x81 h9 y2826 ff1 fs2 fc0 sc0 ls0 ws0">Table 27-48.<span class="_ _1a"> </span>Verify Backdoor Access Key Command FCCOB Requirements</div><div class="t m0 xb9 h10 y2827 ff1 fs4 fc0 sc0 ls0 ws0">FCCOB Number<span class="_ _81"> </span>FCCOB Contents [7:0]<span class="_ _18"> </span>Flash Configuration Field Offset Address</div><div class="t m0 x3d h7 y2828 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _138"> </span>0x45 (VFYKEY)</div><div class="t m0 x81 h7 y2829 ff2 fs4 fc0 sc0 ls0 ws0">1-3<span class="_ _1ff"> </span>Not Used</div><div class="t m0 x3d h7 y282a ff2 fs4 fc0 sc0 ls0 ws0">4<span class="_ _1c1"> </span>Key Byte 0<span class="_ _200"> </span>0x0_0000</div><div class="t m0 x3d h7 y282b ff2 fs4 fc0 sc0 ls0 ws0">5<span class="_ _1c1"> </span>Key Byte 1<span class="_ _200"> </span>0x0_0001</div><div class="t m0 x3d h7 y282c ff2 fs4 fc0 sc0 ls0 ws0">6<span class="_ _1c1"> </span>Key Byte 2<span class="_ _200"> </span>0x0_0002</div><div class="t m0 x3d h7 y282d ff2 fs4 fc0 sc0 ls0 ws0">7<span class="_ _1c1"> </span>Key Byte 3<span class="_ _200"> </span>0x0_0003</div><div class="t m0 x3d h7 y282e ff2 fs4 fc0 sc0 ls0 ws0">8<span class="_ _1c1"> </span>Key Byte 4<span class="_ _200"> </span>0x0_0004</div><div class="t m0 x3d h7 y282f ff2 fs4 fc0 sc0 ls0 ws0">9<span class="_ _1c1"> </span>Key Byte 5<span class="_ _200"> </span>0x0_0005</div><div class="t m0 xc8 h7 y2830 ff2 fs4 fc0 sc0 ls0 ws0">A<span class="_ _11c"> </span>Key Byte 6<span class="_ _200"> </span>0x0_0006</div><div class="t m0 xc8 h7 y2831 ff2 fs4 fc0 sc0 ls0 ws0">B<span class="_ _11c"> </span>Key Byte 7<span class="_ _200"> </span>0x0_0007</div><div class="t m0 x9 hf y2832 ff3 fs5 fc0 sc0 ls0 ws0">After clearing CCIF to launch the Verify Backdoor Access Key command, the flash</div><div class="t m0 x9 hf y2833 ff3 fs5 fc0 sc0 ls0 ws0">memory module checks the FSEC[KEYEN] bits to verify that this command is enabled.</div><div class="t m0 x9 hf y2834 ff3 fs5 fc0 sc0 ls0 ws0">If not enabled, the flash memory module sets the FSTAT[ACCERR] bit and terminates.</div><div class="t m0 x9 hf y2835 ff3 fs5 fc0 sc0 ls0 ws0">If the command is enabled, the flash memory module compares the key provided in</div><div class="t m0 x9 hf y2836 ff3 fs5 fc0 sc0 ls0 ws0">FCCOB to the backdoor comparison key in the Flash Configuration Field. If the</div><div class="t m0 x9 hf y2837 ff3 fs5 fc0 sc0 ls0 ws0">backdoor keys match, the FSEC[SEC] field is changed to the unsecure state and security</div><div class="t m0 x9 hf y2838 ff3 fs5 fc0 sc0 ls0 ws0">is released. If the backdoor keys do not match, security is not released and all future</div><div class="t m0 x9 hf y2839 ff3 fs5 fc0 sc0 ls0 ws0">attempts to execute the Verify Backdoor Access Key command are immediately aborted</div><div class="t m0 x9 hf y1a9f ff3 fs5 fc0 sc0 ls0 ws0">and the FSTAT[ACCERR] bit is (again) set to 1 until a reset of the flash memory module</div><div class="t m0 x9 hf y1aa0 ff3 fs5 fc0 sc0 ls0 ws0">module occurs. If the entire 8-byte key is all zeros or all ones, the Verify Backdoor</div><div class="t m0 x9 hf y283a ff3 fs5 fc0 sc0 ls0 ws0">Access Key command fails with an access error. The CCIF flag is set after the Verify</div><div class="t m0 x9 hf y283b ff3 fs5 fc0 sc0 ls0 ws0">Backdoor Access Key operation completes.</div><div class="t m0 x29 h9 y283c ff1 fs2 fc0 sc0 ls0 ws0">Table 27-49.<span class="_ _1a"> </span>Verify Backdoor Access Key Command Error Handling</div><div class="t m0 x89 h10 y283d ff1 fs4 fc0 sc0 ls0 ws0">Error Condition<span class="_ _1df"> </span>Error Bit</div><div class="t m0 x2c h7 y283e ff2 fs4 fc0 sc0 ls0 ws0">The supplied key is all-0s or all-Fs<span class="_ _1e0"> </span>FSTAT[ACCERR]</div><div class="t m0 x2c h7 y283f ff2 fs4 fc0 sc0 ls0 ws0">An incorrect backdoor key is supplied<span class="_ _201"> </span>FSTAT[ACCERR]</div><div class="t m0 x1b h7 y2840 ff5 fs4 fc0 sc0 ls0 ws0">Table continues on the next page...</div><div class="t m0 x150 h10 y17b ff1 fs4 fc0 sc0 ls0 ws0">Chapter 27 Flash Memory Module (FTFA)</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>453</div><a class="l" href="#pf1b7" data-dest-detail='[439,"XYZ",null,392.95,null]'><div class="d m1" style="border-style:none;position:absolute;left:212.634000px;bottom:668.200000px;width:151.284000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf1a6" data-dest-detail='[422,"XYZ",null,124.364,null]'><div class="d m1" style="border-style:none;position:absolute;left:194.378000px;bottom:604.200000px;width:213.500000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
