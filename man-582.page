<div id="pf246" class="pf w0 h0" data-page-no="246"><div class="pc pc246 w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg246.png"/><div class="c x9 y33d8 w24 h17c"><div class="t m0 x11f h186 y33d9 ff3 fsb4 fc0 sc0 ls0 ws0">Timer enabled</div><div class="t m0 x1 h187 y33da ff3 fsb5 fc0 sc0 ls0 ws415">p1<span class="fsb6 ls26b ws0"> </span><span class="v0">p1</span></div><div class="t m0 x112 h186 y33db ff3 fsb4 fc0 sc0 ls0 ws0">Start value = p1 </div><div class="t m0 xcb h186 y33dc ff3 fsb4 fc0 sc0 ls0 ws0">Trigger </div><div class="t m0 xcb h186 y33dd ff3 fsb4 fc0 sc0 ls0">event</div><div class="t m0 xd9 h188 y33de ff3 fsb5 fc0 sc0 ls0 ws416">p2 <span class="v0">p2</span></div><div class="t m0 x15 h189 y33df ff3 fsb5 fc0 sc0 ls0">p1</div><div class="t m0 x3 h186 y33e0 ff3 fsb4 fc0 sc0 ls0 ws0">New start </div><div class="t m0 x3 h18a y33e1 ff2 fsb6 fc0 sc0 ls0 ws0"> </div><div class="t m0 x3 h189 y33e2 ff3 fsb5 fc0 sc0 ls0 ws0">Value p2 set</div></div><div class="t m0 x8d h9 y33e3 ff1 fs2 fc0 sc0 ls0 ws0">Figure 32-19. Dynamically setting a new load value</div><div class="t m0 x9 h1b y33e4 ff1 fsc fc0 sc0 ls0 ws0">32.4.1.2<span class="_ _b"> </span>Debug mode</div><div class="t m0 x9 hf y33e5 ff3 fs5 fc0 sc0 ls0 ws0">In Debug mode, the timers will be frozen based on MCR[FRZ]. This is intended to aid</div><div class="t m0 x9 hf y33e6 ff3 fs5 fc0 sc0 ls0 ws0">software development, allowing the developer to halt the processor, investigate the</div><div class="t m0 x9 hf y33e7 ff3 fs5 fc0 sc0 ls0 ws0">current state of the system, for example, the timer values, and then continue the</div><div class="t m0 x9 hf y33e8 ff3 fs5 fc0 sc0 ls0">operation.</div><div class="t m0 x9 he y33e9 ff1 fs1 fc0 sc0 ls0 ws18f">32.4.2 Interrupts</div><div class="t m0 x9 hf y33ea ff3 fs5 fc0 sc0 ls0 ws0">All the timers support interrupt generation. See the MCU specification for related vector</div><div class="t m0 x9 hf y33eb ff3 fs5 fc0 sc0 ls0 ws0">addresses and priorities.</div><div class="t m0 x9 hf y33ec ff3 fs5 fc0 sc0 ls0 ws0">Timer interrupts can be enabled by setting TCTRLn[TIE]. TFLGn[TIF] are set to 1 when</div><div class="t m0 x9 hf y33ed ff3 fs5 fc0 sc0 ls0 ws0">a timeout occurs on the associated timer, and are cleared to 0 by writing a 1 to the</div><div class="t m0 x9 hf y33ee ff3 fs5 fc0 sc0 ls0 ws0">corresponding TFLGn[TIF].</div><div class="t m0 x9 he y33ef ff1 fs1 fc0 sc0 ls0 ws0">32.4.3<span class="_ _b"> </span>Chained timers</div><div class="t m0 x9 hf y33f0 ff3 fs5 fc0 sc0 ls0 ws0">When a timer has chain mode enabled, it will only count after the previous timer has</div><div class="t m0 x9 hf y33f1 ff3 fs5 fc0 sc0 ls0 ws0">expired. So if timer n-1 has counted down to 0, counter n will decrement the value by</div><div class="t m0 x9 hf y33f2 ff3 fs5 fc0 sc0 ls0 ws0">one. This allows to chain some of the timers together to form a longer timer. The first</div><div class="t m0 x9 hf y33f3 ff3 fs5 fc0 sc0 ls0 ws0">timer (timer 0) cannot be chained to any other timer.</div><div class="t m0 x9 hd y33f4 ff1 fs7 fc0 sc0 ls0 ws0">32.5<span class="_ _b"> </span>Initialization and application information</div><div class="t m0 x9 hf y33f5 ff3 fs5 fc0 sc0 ls0 ws0">In the example configuration:</div><div class="t m0 x33 hf y33f6 ff3 fs5 fc0 sc0 ls0 ws0">â€¢<span class="_ _11"> </span>The PIT clock has a frequency of 50 MHz.</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Initialization and application information</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">582<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
