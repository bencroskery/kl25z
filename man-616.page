<div id="pf268" class="pf w0 h0" data-page-no="268"><div class="pc pc268 w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg268.png"/><div class="t m0 x9 he y1c7 ff1 fs1 fc0 sc0 ls0 ws0">35.3.3<span class="_ _b"> </span>Addressing BDT entries</div><div class="t m0 x9 hf y1c8 ff3 fs5 fc0 sc0 ls0 ws0">An understanding of the addressing mechanism of the Buffer Descriptor Table is useful</div><div class="t m0 x9 hf y9de ff3 fs5 fc0 sc0 ls0 ws0">when accessing endpoint data via the USB-FS or microprocessor. Some points of interest</div><div class="t m0 x9 hf y9df ff3 fs5 fc0 sc0 ls0">are:</div><div class="t m0 x33 hf y9e0 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>The BDT occupies up to 512 bytes of system memory.</div><div class="t m0 x33 hf y9e1 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>16 bidirectional endpoints can be supported with a full BDT of 512 bytes.</div><div class="t m0 x33 hf y9e2 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>16 bytes are needed for each USB endpoint direction.</div><div class="t m0 x33 hf y1c20 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Applications with less than 16 endpoints require less RAM to implement the BDT.</div><div class="t m0 x33 hf y1c21 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>The BDT Page Registers (BDT_PAGE) point to the starting location of the BDT.</div><div class="t m0 x33 hf y27e1 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>The BDT must be located on a 512-byte boundary in system memory.</div><div class="t m0 x33 hf y3622 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>All enabled TX and RX endpoint BD entries are indexed into the BDT to allow easy</div><div class="t m0 x117 hf y3623 ff3 fs5 fc0 sc0 ls0 ws0">access via the USB-FS or MCU core.</div><div class="t m0 x9 hf y1b2e ff3 fs5 fc0 sc0 ls0 ws0">When a USB token on an enabled endpoint is received, the USB-FS uses its integrated</div><div class="t m0 x9 hf y3624 ff3 fs5 fc0 sc0 ls0 ws0">DMA controller to interrogate the BDT. The USB-FS reads the corresponding endpoint</div><div class="t m0 x9 hf y3625 ff3 fs5 fc0 sc0 ls0 ws0">BD entry to determine whether it owns the BD and corresponding buffer in system</div><div class="t m0 x9 hf y185d ff3 fs5 fc0 sc0 ls0">memory.</div><div class="t m0 x9 hf y2ae5 ff3 fs5 fc0 sc0 ls0 ws0">To compute the entry point in to the BDT, the BDT_PAGE registers is concatenated with</div><div class="t m0 x9 hf y3626 ff3 fs5 fc0 sc0 ls0 ws0">the current endpoint and the TX and ODD fields to form a 32-bit address. This address</div><div class="t m0 x9 hf y3627 ff3 fs5 fc0 sc0 ls0 ws0">mechanism is shown below:</div><div class="t m0 xb6 h9 y3628 ff1 fs2 fc0 sc0 ls0 ws0">Table 35-2.<span class="_ _1a"> </span>BDT address calculation fields</div><div class="t m0 x151 h10 y3629 ff1 fs4 fc0 sc0 ls0 ws261">Field Description</div><div class="t m0 x3a h7 y437 ff2 fs4 fc0 sc0 ls0 ws0">BDT_PAGE<span class="_ _1d1"> </span>BDT_PAGE registers in the Control Register Block</div><div class="t m0 x34 h7 y362a ff2 fs4 fc0 sc0 ls0 ws0">END_POINT<span class="_ _239"> </span>END POINT field from the USB TOKEN</div><div class="t m0 x81 h7 y362b ff2 fs4 fc0 sc0 ls0 ws0">TX<span class="_ _c6"> </span>1 for transmit transfers and 0 for receive transfers</div><div class="t m0 x151 h7 y362c ff2 fs4 fc0 sc0 ls0 ws0">ODD<span class="_ _14f"> </span>Maintained within the USB-FS SIE. It corresponds to the buffer currently in use. The buffers are</div><div class="t m0 x167 h7 y362d ff2 fs4 fc0 sc0 ls0 ws0">used in a ping-pong fashion.</div><div class="t m0 x9 he y362e ff1 fs1 fc0 sc0 ls0 ws0">35.3.4<span class="_ _b"> </span>Buffer Descriptors (BDs)</div><div class="t m0 x9 hf y362f ff3 fs5 fc0 sc0 ls0 ws0">A buffer descriptor provides endpoint buffer control information for the USB-FS and</div><div class="t m0 x9 hf y3630 ff3 fs5 fc0 sc0 ls0 ws0">processor. The Buffer Descriptors have different meaning based on whether it is the</div><div class="t m0 x9 hf ya2f ff3 fs5 fc0 sc0 ls0 ws0">USB-FS or processor reading the BD in memory.</div><div class="t m0 x9 hf y3631 ff3 fs5 fc0 sc0 ls0 ws0">The USB-FS Controller uses the data stored in the BDs to determine:</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Programmers interface</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">616<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
