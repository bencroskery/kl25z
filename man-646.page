<div id="pf286" class="pf w0 h0" data-page-no="286"><div class="pc pc286 w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg286.png"/><div class="t m0 x117 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">complete. When the BDT is written, a token done (ISTAT[TOKDNE]) interrupt is</div><div class="t m0 x117 hf yf7 ff3 fs5 fc0 sc0 ls0 ws0">asserted. This completes the setup phase of the setup transaction. Se the <span class="ff4">Universal</span></div><div class="t m0 x117 hf yf8 ff4 fs5 fc0 sc0 ls0 ws0">Serial Bus Revision 2.0 specification, <span class="ff3">&quot;Chapter 9 USB Device Framework&quot; (http://</span></div><div class="t m0 x117 hf yf9 ff3 fs5 fc0 sc0 ls0">www.usb.org/developers/docs).</div><div class="t m0 xf6 hf y629 ff3 fs5 fc0 sc0 ls0 ws0">7.<span class="_ _11"> </span>To initiate the data phase of the setup transaction (that is, get the data for the GET</div><div class="t m0 x117 hf y62a ff3 fs5 fc0 sc0 ls0 ws0">DEVICE DESCRIPTOR command), set up a buffer in memory for the data to be</div><div class="t m0 x117 hf yabd ff3 fs5 fc0 sc0 ls0">transferred.</div><div class="t m0 xf6 hf y675 ff3 fs5 fc0 sc0 ls0 ws0">8.<span class="_ _11"> </span>Initialize the current even or odd TX EP0 BDT to transfer the data.</div><div class="t m0 x2 hf y1dd8 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Set the BDT command word to 0x004000C0 – BC to 64 (the byte count of the</div><div class="t m0 x3d hf y243e ff3 fs5 fc0 sc0 ls0 ws0">data buffer in this case), OWN bit to 1, Data toggle to Data1.</div><div class="t m0 x2 hf y1dda ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Set the BDT buffer address field to the start address of the data buffer</div><div class="t m0 xf6 hf y3907 ff3 fs5 fc0 sc0 ls0 ws0">9.<span class="_ _11"> </span>Write the token register with a IN or OUT token to Endpoint 0 the target device</div><div class="t m0 x117 hf y3908 ff3 fs5 fc0 sc0 ls0 ws0">default control pipe, an IN token for a GET DEVICE DESCRIPTOR command</div><div class="t m0 x117 hf y3909 ff3 fs5 fc0 sc0 ls0 ws0">(TOKEN=0x90). This initiates an IN token on the bus followed by a data packet</div><div class="t m0 x117 hf y390a ff3 fs5 fc0 sc0 ls0 ws0">from the device to the host. When the data packet completes, the BDT is written and</div><div class="t m0 x117 hf y391b ff3 fs5 fc0 sc0 ls0 ws0">a token done (ISTAT[DNE]) interrupt is asserted. For control transfers with a single</div><div class="t m0 x117 hf y391c ff3 fs5 fc0 sc0 ls0 ws0">packet data phase this completes the data phase of the setup transaction. See the</div><div class="t m0 x117 hf y391d ff4 fs5 fc0 sc0 ls0 ws0">Universal Serial Bus Revision 2.0 specification, <span class="ff3">&quot;Chapter 9 USB Device Framework&quot;</span></div><div class="t m0 x117 hf y391e ff3 fs5 fc0 sc0 ls0">(http://www.usb.org/developers/docs).</div><div class="t m0 x9 hf y391f ff3 fs5 fc0 sc0 ls0 ws0">10.<span class="_ _11"> </span>To initiate the status phase of the setup transaction, set up a buffer in memory to</div><div class="t m0 x117 hf y3920 ff3 fs5 fc0 sc0 ls0 ws0">receive or send the zero length status phase data packet.</div><div class="t m0 x9 hf y3921 ff3 fs5 fc0 sc0 ls0 ws0">11.<span class="_ _11"> </span>Initialize the current even or odd TX EP0 BDT to transfer the status data.</div><div class="t m0 x2 hf y3922 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Set the BDT command word to 0x00000080 – BC to 0 (the byte count of the</div><div class="t m0 x3d hf y3923 ff3 fs5 fc0 sc0 ls0 ws0">data buffer in this case), OWN bit to 1, Data toggle to Data1.</div><div class="t m0 x2 hf y3924 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Set the BDT buffer address field to the start address of the data buffer</div><div class="t m0 x9 hf y3925 ff3 fs5 fc0 sc0 ls0 ws0">12.<span class="_ _11"> </span>Write the token register with a IN or OUT token to Endpoint 0 the target device</div><div class="t m0 x117 hf y3926 ff3 fs5 fc0 sc0 ls0 ws0">default control pipe, an OUT token for a GET DEVICE DESCRIPTOR command</div><div class="t m0 x117 hf y3927 ff3 fs5 fc0 sc0 ls0 ws0">(TOKEN=0x10). This initiates an OUT token on the bus followed by a zero length</div><div class="t m0 x117 hf y3928 ff3 fs5 fc0 sc0 ls0 ws0">data packet from the host to the device. When the data packet completes, the BDT is</div><div class="t m0 x117 hf y3929 ff3 fs5 fc0 sc0 ls0 ws0">written with the handshake from the device and a Token Done (ISTAT[TOKDNE])</div><div class="t m0 x117 hf y392a ff3 fs5 fc0 sc0 ls0 ws0">interrupt is asserted. This completes the data phase of the setup transaction. See the</div><div class="t m0 x117 hf y392b ff4 fs5 fc0 sc0 ls0 ws0">Universal Serial Bus Revision 2.0 specification, <span class="ff3">&quot;Chapter 9 USB Device Framework&quot;</span></div><div class="t m0 x117 hf y392c ff3 fs5 fc0 sc0 ls0">(http://www.usb.org/developers/docs).</div><div class="t m0 x9 hf y392d ff3 fs5 fc0 sc0 ls0 ws0">To send a full speed bulk data transfer to a target device:</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Host Mode Operation Examples</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">646<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
