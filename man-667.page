<div id="pf29b" class="pf w0 h0" data-page-no="29b"><div class="pc pc29b w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg29b.png"/><div class="t m0 x9 h1b y2d7 ff1 fsc fc0 sc0 ls0 ws0">37.3.5<span class="_ _b"> </span>SPI data register (SPI<span class="ff7 ws24e">x</span>_D)</div><div class="t m0 x9 hf ybf ff3 fs5 fc0 sc0 ls0 ws0">This register is both the input and output register for SPI data. A write to the register</div><div class="t m0 x9 hf y282 ff3 fs5 fc0 sc0 ls0 ws0">writes to the transmit data buffer, allowing data to be queued and transmitted.</div><div class="t m0 x9 hf y799 ff3 fs5 fc0 sc0 ls0 ws0">When the SPI is configured as a master, data queued in the transmit data buffer is</div><div class="t m0 x9 hf ya31 ff3 fs5 fc0 sc0 ls0 ws0">transmitted immediately after the previous transmission has completed.</div><div class="t m0 x9 hf y3598 ff3 fs5 fc0 sc0 ls0 ws0">The SPTEF bit in the S register indicates when the transmit data buffer is ready to accept</div><div class="t m0 x9 hf ya75 ff3 fs5 fc0 sc0 ls0 ws0">new data. When the transmit DMA request is disabled (TXDMAE is 0): The S register</div><div class="t m0 x9 hf y62c ff3 fs5 fc0 sc0 ls0 ws0">must be read when SPTEF is set before writing to the SPI data register; otherwise, the</div><div class="t m0 x9 hf y14cd ff3 fs5 fc0 sc0 ls0 ws0">write is ignored. When the transmit DMA request is enabled (TXDMAE is 1) when</div><div class="t m0 x9 hf y1545 ff3 fs5 fc0 sc0 ls0 ws0">SPTEF is set, the SPI data register can be written automatically by DMA without reading</div><div class="t m0 x9 hf y18a6 ff3 fs5 fc0 sc0 ls0 ws0">the S register first.</div><div class="t m0 x9 hf y14d0 ff3 fs5 fc0 sc0 ls0 ws0">Data may be read from the SPI data register any time after SPRF is set and before another</div><div class="t m0 x9 hf y14d1 ff3 fs5 fc0 sc0 ls0 ws0">transfer is finished. Failure to read the data out of the receive data buffer before a new</div><div class="t m0 x9 hf y14d2 ff3 fs5 fc0 sc0 ls0 ws0">transfer ends causes a receive overrun condition, and the data from the new transfer is</div><div class="t m0 x9 hf y14d3 ff3 fs5 fc0 sc0 ls0 ws0">lost. The new data is lost because the receive buffer still held the previous character and</div><div class="t m0 x9 hf y14d4 ff3 fs5 fc0 sc0 ls0 ws0">was not ready to accept the new data. There is no indication for a receive overrun</div><div class="t m0 x9 hf y14d5 ff3 fs5 fc0 sc0 ls0 ws0">condition, so the application system designer must ensure that previous data has been</div><div class="t m0 x9 hf y2c63 ff3 fs5 fc0 sc0 ls0 ws0">read from the receive buffer before a new transfer is initiated.</div><div class="t m0 x9 h7 y3ae6 ff2 fs4 fc0 sc0 ls0 ws0">Address: 4007_6000h base + 5h offset = 4007_6005h</div><div class="t m0 x81 h1d y3ae7 ff2 fsd fc0 sc0 ls0 ws284">Bit<span class="_ _165"> </span>7 6 5 4 3 2 1 0</div><div class="t m0 x1 h7 y3ae8 ff2 fs4 fc0 sc0 ls0 ws47d">Read <span class="ve">Bits[7:0]</span></div><div class="t m0 x8b h7 y3ae9 ff2 fs4 fc0 sc0 ls0">Write</div><div class="t m0 x12c h7 y3aea ff2 fs4 fc0 sc0 ls0 ws2ab">Reset <span class="ls1c4 ws28a v1b">00000000<span class="_ _19a"></span></span></div><div class="t m0 x1b h9 y3aeb ff1 fs2 fc0 sc0 ls0 ws0">SPI0_D field descriptions</div><div class="t m0 x12c h10 y3aec ff1 fs4 fc0 sc0 ls0 ws259">Field Description</div><div class="t m0 x1 h7 y3aed ff2 fs4 fc0 sc0 ls0">7â€“0</div><div class="t m0 x60 h7 y2f73 ff2 fs4 fc0 sc0 ls0">Bits[7:0]</div><div class="t m0 x83 h7 y3aed ff2 fs4 fc0 sc0 ls0 ws0">Data (low byte)</div><div class="t m0 xec h10 y17b ff1 fs4 fc0 sc0 ls0 ws0">Chapter 37 Serial Peripheral Interface (SPI)</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>667</div><a class="l" href="#pf29b" data-dest-detail='[667,"XYZ",null,252.5,null]'><div class="d m1" style="border-style:none;position:absolute;left:317.742000px;bottom:318.250000px;width:32.516000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
