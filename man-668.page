<div id="pf29c" class="pf w0 h0" data-page-no="29c"><div class="pc pc29c w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg29c.png"/><div class="t m0 x9 h1b y2d7 ff1 fsc fc0 sc0 ls0 ws0">37.3.6<span class="_ _b"> </span>SPI match register (SPI<span class="ff7 ws24e">x</span>_M)</div><div class="t m0 x9 hf y798 ff3 fs5 fc0 sc0 ls0 ws0">This register contains the hardware compare value. When the value received in the SPI</div><div class="t m0 x9 hf y799 ff3 fs5 fc0 sc0 ls0 ws0">receive data buffer equals this hardware compare value, the SPI match flag (SPMF) sets.</div><div class="t m0 x9 h7 y183 ff2 fs4 fc0 sc0 ls0 ws0">Address: 4007_6000h base + 7h offset = 4007_6007h</div><div class="t m0 x81 h1d y1092 ff2 fsd fc0 sc0 ls0 ws284">Bit<span class="_ _165"> </span>7 6 5 4 3 2 1 0</div><div class="t m0 x1 h7 y3aee ff2 fs4 fc0 sc0 ls0 ws47d">Read <span class="ve">Bits[7:0]</span></div><div class="t m0 x8b h7 y1096 ff2 fs4 fc0 sc0 ls0">Write</div><div class="t m0 x12c h7 y3aef ff2 fs4 fc0 sc0 ls0 ws2ab">Reset <span class="ls1c4 ws28a v1b">00000000<span class="_ _19a"></span></span></div><div class="t m0 x25 h9 y3af0 ff1 fs2 fc0 sc0 ls0 ws0">SPI0_M field descriptions</div><div class="t m0 x12c h10 y3af1 ff1 fs4 fc0 sc0 ls0 ws259">Field Description</div><div class="t m0 x1 h7 y1080 ff2 fs4 fc0 sc0 ls0">7–0</div><div class="t m0 x60 h7 y3af2 ff2 fs4 fc0 sc0 ls0">Bits[7:0]</div><div class="t m0 x83 h7 y1080 ff2 fs4 fc0 sc0 ls0 ws0">Hardware compare value (low byte)</div><div class="t m0 x9 hd y3af3 ff1 fs7 fc0 sc0 ls0 ws0">37.4<span class="_ _b"> </span>Functional Description</div><div class="t m0 x9 hf y6a4 ff3 fs5 fc0 sc0 ls0 ws0">This section provides the functional description of the module.</div><div class="t m0 x9 he y3af4 ff1 fs1 fc0 sc0 ls0 ws18f">37.4.1 General</div><div class="t m0 x9 hf y21d ff3 fs5 fc0 sc0 ls0 ws0">The SPI system is enabled by setting the SPI enable (SPE) bit in SPI Control Register 1.</div><div class="t m0 x9 hf y2c0c ff3 fs5 fc0 sc0 ls0 ws0">While the SPE bit is set, the four associated SPI port pins are dedicated to the SPI</div><div class="t m0 x9 hf y2c0d ff3 fs5 fc0 sc0 ls0 ws0">function as:</div><div class="t m0 x33 hf yb0a ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Slave select (SS)</div><div class="t m0 x33 hf yb0b ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Serial clock (SPSCK)</div><div class="t m0 x33 hf y3af5 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Master out/slave in (MOSI)</div><div class="t m0 x33 hf y3af6 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Master in/slave out (MISO)</div><div class="t m0 x9 hf y3af7 ff3 fs5 fc0 sc0 ls0 ws0">An SPI transfer is initiated in the master SPI device by reading the SPI status register</div><div class="t m0 x9 hf y3af8 ff3 fs5 fc0 sc0 ls0 ws0">(SPIx_S) when SPTEF = 1 and then writing data to the transmit data buffer (write to</div><div class="t m0 x9 hf y3af9 ff3 fs5 fc0 sc0 ls0 ws0">SPIxD ). When a transfer is complete, received data is moved into the receive data buffer.</div><div class="t m0 x9 hf y3afa ff3 fs5 fc0 sc0 ls0 ws0">The SPIxD register acts as the SPI receive data buffer for reads and as the SPI transmit</div><div class="t m0 x9 hf y3afb ff3 fs5 fc0 sc0 ls0 ws0">data buffer for writes.</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional Description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">668<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div><a class="l" href="#pf29c" data-dest-detail='[668,"XYZ",null,493.3,null]'><div class="d m1" style="border-style:none;position:absolute;left:317.742000px;bottom:559.050000px;width:32.516000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
