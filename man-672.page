<div id="pf2a0" class="pf w0 h0" data-page-no="2a0"><div class="pc pc2a0 w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg2a0.png"/><div class="c x1d y3b32 w6f h1ac"><div class="t m0 xcd h26 y3b33 ff2 fsf fc0 sc0 ls0 ws0">Configure SPI before T<span class="_ _124"></span>ransmission </div><div class="t m0 xf6 h26 y3b34 ff2 fsf fc0 sc0 ls0">RESET</div><div class="t m0 xc3 h26 y3b35 ff2 fsf fc0 sc0 ls0 ws0">Configure DMA Controller</div><div class="t m0 x11f h26 y3b36 ff2 fsf fc0 sc0 ls0 ws0">for SPI Transmission</div><div class="t m0 x9d h26 y3b37 ff2 fsf fc0 sc0 ls0 ws0">Set TXDMAE/RXDMAE=1 to enable</div><div class="t m0 x16b h26 y3b38 ff2 fsf fc0 sc0 ls0 ws0">Transmit/Receive by DMA</div><div class="t m0 xcd h26 y3b39 ff2 fsf fc0 sc0 ls0 ws0">Set SPE=1 to start transmission in</div><div class="t m0 xa7 h26 y3b3a ff2 fsf fc0 sc0 ls0 ws0">master mode or enable SPI for</div><div class="t m0 x16b h26 y3b3b ff2 fsf fc0 sc0 ls0 ws0">transmission in slave moe</div><div class="t m0 xc0 h26 y3b3c ff2 fsf fc0 sc0 ls0 ws0">Wait for interrupt(s) of DMA Controller</div><div class="t m0 xcd h26 y3b3d ff2 fsf fc0 sc0 ls0 ws0">indicating end of SPI transmission</div></div><div class="t m0 x10c h9 y3b3e ff1 fs2 fc0 sc0 ls0 ws0">Figure 37-21. Basic Flow of SPI Transmission by DMA</div><div class="t m0 x9 h1b y3b3f ff1 fsc fc0 sc0 ls0 ws0">37.4.4.1<span class="_ _b"> </span>Transmit by DMA</div><div class="t m0 x9 hf y3b40 ff3 fs5 fc0 sc0 ls0 ws0">Transmit by DMA is supported only when TXDMAE is set. A transmit DMA request is</div><div class="t m0 x9 hf y3b41 ff3 fs5 fc0 sc0 ls0 ws0">asserted when both SPE and SPTEF are set. Then the on-chip DMA controller detects</div><div class="t m0 x9 hf y3b42 ff3 fs5 fc0 sc0 ls0 ws0">this request and transfers data from memory into the SPI data register. After that, TX</div><div class="t m0 x9 hf y3b43 ff3 fs5 fc0 sc0 ls0 ws0">DMA DONE is asserted to clear SPTEF automatically. This process repeats until all data</div><div class="t m0 x9 hf y3b44 ff3 fs5 fc0 sc0 ls0 ws0">for transmission (the number is decided by the configuration register[s] of the DMA</div><div class="t m0 x9 hf y3b45 ff3 fs5 fc0 sc0 ls0 ws0">controller) is sent.</div><div class="t m0 x9 hf y3b46 ff3 fs5 fc0 sc0 ls0 ws0">After DMA transfers the first byte to the SPI data register, the SPI pushes this data into</div><div class="t m0 x9 hf y3b47 ff3 fs5 fc0 sc0 ls0 ws0">the shifter, thereby making SPTEF high again. This generates another DMA request</div><div class="t m0 x9 hf y3b48 ff3 fs5 fc0 sc0 ls0 ws0">immediately, but the CPU lacks enough time to service the first DMA interrupt service</div><div class="t m0 x9 hf y3b49 ff3 fs5 fc0 sc0 ls0 ws0">request (ISR). The subsequent DMA request is paced at the SPI transfer rate. Manage this</div><div class="t m0 x9 hf y3b4a ff3 fs5 fc0 sc0 ls0 ws0">behavior during the first byte transfer through the DMA channel. Write the first byte to</div><div class="t m0 x9 hf y3b4b ff3 fs5 fc0 sc0 ls0 ws0">the SPI data register via the CPU. The other bytes are transmitted by the DMA.</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional Description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">672<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
