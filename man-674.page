<div id="pf2a2" class="pf w0 h0" data-page-no="2a2"><div class="pc pc2a2 w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg2a2.png"/><div class="t m0 x9 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">The following figure shows the clock formats when CPHA = 1. At the top of the figure,</div><div class="t m0 x9 hf yf7 ff3 fs5 fc0 sc0 ls0 ws0">the eight bit times are shown for reference with bit 1 starting at the first SPSCK edge and</div><div class="t m0 x9 hf yf8 ff3 fs5 fc0 sc0 ls0 ws0">bit 8 ending one-half SPSCK cycle after the eighth SPSCK edge. The MSB first and LSB</div><div class="t m0 x9 hf yf9 ff3 fs5 fc0 sc0 ls0 ws0">first lines show the order of SPI data bits depending on the setting in LSBFE. Both</div><div class="t m0 x9 hf yfa ff3 fs5 fc0 sc0 ls0 ws0">variations of SPSCK polarity are shown, but only one of these waveforms applies for a</div><div class="t m0 x9 hf yfb ff3 fs5 fc0 sc0 ls0 ws0">specific transfer, depending on the value in CPOL. The SAMPLE IN waveform applies</div><div class="t m0 x9 hf yfc ff3 fs5 fc0 sc0 ls0 ws0">to the MOSI input of a slave or the MISO input of a master. The MOSI waveform applies</div><div class="t m0 x9 hf y11f ff3 fs5 fc0 sc0 ls0 ws0">to the MOSI output pin from a master and the MISO waveform applies to the MISO</div><div class="t m0 x9 hf y120 ff3 fs5 fc0 sc0 ls0 ws0">output from a slave. The SS OUT waveform applies to the slave select output from a</div><div class="t m0 x9 hf y121 ff3 fs5 fc0 sc0 ls0 ws0">master (provided MODFEN and SSOE = 1). The master SS output goes to active low</div><div class="t m0 x9 hf y122 ff3 fs5 fc0 sc0 ls0 ws0">one-half SPSCK cycle before the start of the transfer and goes back high at the end of the</div><div class="t m0 x9 hf y123 ff3 fs5 fc0 sc0 ls0 ws0">eighth bit time of the transfer. The SS IN waveform applies to the slave select input of a</div><div class="t m0 x9 hf y124 ff3 fs5 fc0 sc0 ls0">slave.</div><div class="c xf6 y3b6a w71 h1ae"><div class="t m0 x157 h26 y3b6b ff2 fsf fc0 sc0 ls0 ws0">SS OUT</div><div class="t m0 xb5 h26 y3b6c ff2 fsf fc0 sc0 ls0 ws0">SS IN</div><div class="t m0 x13d h26 y3b6d ff2 fsf fc0 sc0 ls0">(SLAVE)</div><div class="t m0 xa6 h26 y3b6e ff2 fsf fc0 sc0 ls0">(MASTER)</div><div class="t m0 x84 h26 y3b6f ff2 fsf fc0 sc0 ls0 ws0">(SLAVE OUT)</div><div class="t m0 xb5 h26 y3b70 ff2 fsf fc0 sc0 ls0">MISO</div><div class="t m0 x36 h26 y3b71 ff2 fsf fc0 sc0 ls0 ws0">MSB FIRST</div><div class="t m0 x9d h26 y3b72 ff2 fsf fc0 sc0 ls0 ws0">LSB FIRST</div><div class="t m0 xcc h26 y3b73 ff2 fsf fc0 sc0 ls0">MOSI</div><div class="t m0 x35 h26 y3b74 ff2 fsf fc0 sc0 ls0 ws0">(MASTER OUT)</div><div class="t m0 x0 h26 y3b75 ff2 fsf fc0 sc0 ls0 ws0">(MISO OR MOSI)</div><div class="t m0 x36 h26 y3b76 ff2 fsf fc0 sc0 ls0 ws0">SAMPLE IN</div><div class="t m0 xa7 h26 y3b77 ff2 fsf fc0 sc0 ls0">SPSCK</div><div class="t m0 x36 h26 y3b78 ff2 fsf fc0 sc0 ls0 ws0">(CPOL = 1)</div><div class="t m0 xa7 h26 y3b79 ff2 fsf fc0 sc0 ls0">SPSCK</div><div class="t m0 x9d h26 y3b7a ff2 fsf fc0 sc0 ls0 ws0">(CPOL = 0)</div><div class="t m0 x9d h26 y3b7b ff2 fsf fc0 sc0 ls0 ws0">BIT TIME #</div><div class="t m0 xf9 h26 y3b7c ff2 fsf fc0 sc0 ls0">(REFERENCE)</div><div class="t m0 x5f h26 y3b7d ff2 fsf fc0 sc0 ls0 ws0">BIT 7</div><div class="t m0 x5f h1af y3b7e ff2 fsf fc0 sc0 ls0 ws0">BIT 0<span class="_ _164"> </span><span class="v21">BIT 6</span></div><div class="t m0 x19 h1b0 y3b7f ff2 fsf fc0 sc0 ls0 ws0">BIT 1<span class="_ _1f"> </span><span class="v21">BIT 2</span></div><div class="t m0 xea h1b1 y3b7f ff2 fsf fc0 sc0 ls0 ws0">BIT 5<span class="_ _159"> </span><span class="v21">BIT 0</span></div><div class="t m0 x12f h26 y3b80 ff2 fsf fc0 sc0 ls0 ws0">BIT 7</div><div class="t m0 x53 h26 y3b81 ff2 fsf fc0 sc0 ls0 ws0">BIT 1</div><div class="t m0 x53 h26 y3b82 ff2 fsf fc0 sc0 ls0 ws0">BIT 6</div><div class="t m0 x147 h26 y3b83 ff2 fsf fc0 sc0 ls284">1<span class="ls0 ws47e v1b">2<span class="_ _a2"> </span>6 </span><span class="ls285 v1b">7</span><span class="ls0 v0">8</span></div><div class="t m0 x163 h26 y3b84 ff2 fsf fc0 sc0 ls0">...</div><div class="t m0 x1f h26 y3b85 ff2 fsf fc0 sc0 ls0">...</div><div class="t m0 x1f h26 y3b86 ff2 fsf fc0 sc0 ls0">...</div></div><div class="t m0 x15 h9 y3b87 ff1 fs2 fc0 sc0 ls0 ws0">Figure 37-23. SPI Clock Formats (CPHA = 1)</div><div class="t m0 x9 hf y3b88 ff3 fs5 fc0 sc0 ls0 ws0">When CPHA = 1, the slave begins to drive its MISO output when SS goes to active low,</div><div class="t m0 x9 hf y3b89 ff3 fs5 fc0 sc0 ls0 ws0">but the data is not defined until the first SPSCK edge. The first SPSCK edge shifts the</div><div class="t m0 x9 hf y3b8a ff3 fs5 fc0 sc0 ls0 ws0">first bit of data from the shifter onto the MOSI output of the master and the MISO output</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional Description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">674<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
