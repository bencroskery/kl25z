<div id="pf45" class="pf w0 h0" data-page-no="45"><div class="pc pc45 w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg45.png"/><div class="t m0 xb2 h9 y1a5 ff1 fs2 fc0 sc0 ls0 ws0">Table 3-23.<span class="_ _1a"> </span>COP configuration options (continued)</div><div class="t m0 xa1 h10 y1a6 ff1 fs4 fc0 sc0 ls0 ws0">Control Bits<span class="_ _d8"> </span>Clock Source<span class="_ _d9"> </span>COP Window Opens</div><div class="t m0 xc5 h10 y4e5 ff1 fs4 fc0 sc0 ls0">(COPCTRL[COPW]=1)</div><div class="t m0 xc6 h10 y1a6 ff1 fs4 fc0 sc0 ls0 ws0">COP Overflow Count</div><div class="t m0 xc7 h10 y1a7 ff1 fs4 fc0 sc0 ls0 ws1d0">COPCTRL[COPCLKS] COPCTRL[COPT]</div><div class="t m0 x92 h17 y4e6 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _dc"> </span>10<span class="_ _7d"> </span>1 kHz<span class="_ _2a"> </span>N/A<span class="_ _81"> </span>2<span class="fs9 ws1a4 v4">8</span> cycles (256 ms)</div><div class="t m0 x92 h17 y4e7 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _dc"> </span>11<span class="_ _7d"> </span>1 kHz<span class="_ _2a"> </span>N/A<span class="_ _dd"> </span>2<span class="fs9 ws1a4 v4">10</span> cycles (1024 ms)</div><div class="t m0 x92 h17 y4e8 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _dc"> </span>01<span class="_ _76"> </span>Bus<span class="_ _de"> </span>6,144 cycles<span class="_ _df"> </span>2<span class="fs9 ws1a4 v4">13</span> cycles</div><div class="t m0 x92 h17 y4e9 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _dc"> </span>10<span class="_ _76"> </span>Bus<span class="_ _69"> </span>49,152 cycles<span class="_ _18"> </span>2<span class="fs9 ws1a4 v4">16</span> cycles</div><div class="t m0 x92 h17 y4ea ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _dc"> </span>11<span class="_ _76"> </span>Bus<span class="_ _e0"> </span>196,608 cycles<span class="_ _7d"> </span>2<span class="fs9 ws1a4 v4">18</span> cycles</div><div class="t m0 x9 hf y51 ff3 fs5 fc0 sc0 ls0 ws0">After the bus clock source is selected, windowed COP operation is available by setting</div><div class="t m0 x9 hf y4eb ff3 fs5 fc0 sc0 ls0 ws0">COPCTRL[COPW] in the SIM. In this mode, writes to the SRVCOP register to clear the</div><div class="t m0 x9 hf y4ec ff3 fs5 fc0 sc0 ls0 ws0">COP timer must occur in the last 25% of the selected timeout period. A premature write</div><div class="t m0 x9 hf y4ed ff3 fs5 fc0 sc0 ls0 ws0">immediately resets the chip. When the 1 kHz clock source is selected, windowed COP</div><div class="t m0 x9 hf y4ee ff3 fs5 fc0 sc0 ls0 ws0">operation is not available.</div><div class="t m0 x9 hf y4ef ff3 fs5 fc0 sc0 ls0 ws0">The COP counter is initialized by the first writes to the SIM&apos;s COPCTRL register and</div><div class="t m0 x9 hf y4f0 ff3 fs5 fc0 sc0 ls0 ws0">after any system reset. Subsequent writes to the SIM&apos;s COPCTRL register have no effect</div><div class="t m0 x9 hf y4f1 ff3 fs5 fc0 sc0 ls0 ws0">on COP operation. Even if an application uses the reset default settings of the COPT,</div><div class="t m0 x9 hf y4f2 ff3 fs5 fc0 sc0 ls0 ws0">COPCLKS, and COPW bits, the user should write to the write-once COPCTRL register</div><div class="t m0 x9 hf y4f3 ff3 fs5 fc0 sc0 ls0 ws0">during reset initialization to lock in the settings. This approach prevents accidental</div><div class="t m0 x9 hf y4f4 ff3 fs5 fc0 sc0 ls0 ws0">changes if the application program becomes lost.</div><div class="t m0 x9 hf y4f5 ff3 fs5 fc0 sc0 ls0 ws0">The write to the SRVCOP register that services (clears) the COP counter should not be</div><div class="t m0 x9 hf y4f6 ff3 fs5 fc0 sc0 ls0 ws0">placed in an interrupt service routine (ISR) because the ISR could continue to be</div><div class="t m0 x9 hf y4f7 ff3 fs5 fc0 sc0 ls0 ws0">executed periodically even if the main application program fails.</div><div class="t m0 x9 hf y4f8 ff3 fs5 fc0 sc0 ls0 ws0">If the bus clock source is selected, the COP counter does not increment while the</div><div class="t m0 x9 hf y4f9 ff3 fs5 fc0 sc0 ls0 ws0">microcontroller is in debug mode or while the system is in stop (including VLPS or LLS)</div><div class="t m0 x9 hf y4fa ff3 fs5 fc0 sc0 ls0 ws0">mode. The COP counter resumes when the microcontroller exits debug mode or stop</div><div class="t m0 x9 hf y4fb ff3 fs5 fc0 sc0 ls0">mode.</div><div class="t m0 x9 hf y4fc ff3 fs5 fc0 sc0 ls0 ws0">If the 1 kHz clock source is selected, the COP counter is re-initialized to zero upon entry</div><div class="t m0 x9 hf y4fd ff3 fs5 fc0 sc0 ls0 ws0">to either debug mode or stop (including VLPS or LLS) mode. The counter begins from</div><div class="t m0 x9 hf y4fe ff3 fs5 fc0 sc0 ls0 ws0">zero upon exit from debug mode or stop mode.</div><div class="t m0 x9 hf y4ff ff3 fs5 fc0 sc0 ls0 ws0">Regardless of the clock selected, the COP is disabled when the chip enters a VLLSx</div><div class="t m0 x9 hf y500 ff3 fs5 fc0 sc0 ls0 ws0">mode. Upon a reset that wakes the chip from the VLLSx mode, the COP is re-initialized</div><div class="t m0 x9 hf y501 ff3 fs5 fc0 sc0 ls0 ws0">and enabled as for any reset.</div><div class="t m0 x79 h10 y141 ff1 fs4 fc0 sc0 ls0 ws0">Chapter 3 Chip Configuration</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _9"> </span>69</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
