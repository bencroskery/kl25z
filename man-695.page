<div id="pf2b7" class="pf w0 h0" data-page-no="2b7"><div class="pc pc2b7 w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg2b7.png"/><div class="t m0 x19 h9 yf57 ff1 fs2 fc0 sc0 ls0 ws20b">I2C<span class="ff7">x</span><span class="ws0">_S field descriptions (continued)</span></div><div class="t m0 x12c h10 yf84 ff1 fs4 fc0 sc0 ls0 ws25f">Field Description</div><div class="t m0 xd0 h7 yff6 ff2 fs4 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Any nonzero calling address is received that matches the address in the RA register.</div><div class="t m0 xd0 h7 y13d9 ff2 fs4 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>The RMEN bit is set and the calling address is within the range of values of the A1 and RA registers.</div><div class="t m0 x83 h10 y13b5 ff1 fs4 fc0 sc0 ls0 ws212">NOTE: <span class="ff2 ws0">For the RAM bit to be set to 1 correctly, C1[IICIE] must be set to 1.</span></div><div class="t m0 x83 h7 y3d0d ff2 fs4 fc0 sc0 ls0 ws0">Writing the C1 register with any value clears this bit to 0.</div><div class="t m0 x83 h7 y3d0e ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Not addressed</div><div class="t m0 x83 h7 y3d0f ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Addressed as a slave</div><div class="t m0 x97 h7 y3d10 ff2 fs4 fc0 sc0 ls0">2</div><div class="t m0 x3a h7 y3d11 ff2 fs4 fc0 sc0 ls0">SRW</div><div class="t m0 x83 h7 y3d10 ff2 fs4 fc0 sc0 ls0 ws0">Slave Read/Write</div><div class="t m0 x83 h7 y3d12 ff2 fs4 fc0 sc0 ls0 ws0">When addressed as a slave, SRW indicates the value of the R/W command bit of the calling address sent</div><div class="t m0 x83 h7 y3d13 ff2 fs4 fc0 sc0 ls0 ws0">to the master.</div><div class="t m0 x83 h7 y3d14 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Slave receive, master writing to slave</div><div class="t m0 x83 h7 y3a74 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Slave transmit, master reading from slave</div><div class="t m0 x97 h7 y3d15 ff2 fs4 fc0 sc0 ls0">1</div><div class="t m0 x3a h7 y3d16 ff2 fs4 fc0 sc0 ls0">IICIF</div><div class="t m0 x83 h7 y3d15 ff2 fs4 fc0 sc0 ls0 ws0">Interrupt Flag</div><div class="t m0 x83 h7 y3d17 ff2 fs4 fc0 sc0 ls0 ws0">This bit sets when an interrupt is pending. This bit must be cleared by software by writing a 1 to it, such as</div><div class="t m0 x83 h7 y3a78 ff2 fs4 fc0 sc0 ls0 ws0">in the interrupt routine. One of the following events can set this bit:</div><div class="t m0 xd0 h7 y3d18 ff2 fs4 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>One byte transfer, including ACK/NACK bit, completes if FACK is 0. An ACK or NACK is sent on the</div><div class="t m0 x147 h7 y3742 ff2 fs4 fc0 sc0 ls0 ws0">bus by writing 0 or 1 to TXAK after this bit is set in receive mode.</div><div class="t m0 xd0 h7 y3d19 ff2 fs4 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>One byte transfer, excluding ACK/NACK bit, completes if FACK is 1.</div><div class="t m0 xd0 h7 y3d1a ff2 fs4 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Match of slave address to calling address including primary slave address, range slave address,</div><div class="t m0 x147 h7 y3d1b ff2 fs4 fc0 sc0 ls0 ws0">alert response address, second slave address, or general call address.</div><div class="t m0 xd0 h7 y3d1c ff2 fs4 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Arbitration lost</div><div class="t m0 xd0 h7 y3d1d ff2 fs4 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>In SMBus mode, any timeouts except SCL and SDA high timeouts</div><div class="t m0 xd0 h7 y3d1e ff2 fs4 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>I2C bus stop detection if the STOPIE bit in the Input Glitch Filter register is 1</div><div class="t m0 x9e h10 y3d1f ff1 fs4 fc0 sc0 ls0 ws490">NOTE: <span class="ff2 ws0">To clear the I2C bus stop detection interrupt: In the interrupt service routine,</span></div><div class="t m0 x1e h7 y3d20 ff2 fs4 fc0 sc0 ls0 ws0">first clear the STOPF bit in the Input Glitch Filter register by writing 1 to it, and</div><div class="t m0 x1e h7 y3d21 ff2 fs4 fc0 sc0 ls0 ws0">then clear the IICIF bit. If this sequence is reversed, the IICIF bit is asserted</div><div class="t m0 x1e h7 y3d22 ff2 fs4 fc0 sc0 ls0">again.</div><div class="t m0 x83 h7 y3d23 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>No interrupt pending</div><div class="t m0 x83 h7 y3d24 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Interrupt pending</div><div class="t m0 x97 h7 y3d25 ff2 fs4 fc0 sc0 ls0">0</div><div class="t m0 x95 h7 y3d26 ff2 fs4 fc0 sc0 ls0">RXAK</div><div class="t m0 x83 h7 y3d25 ff2 fs4 fc0 sc0 ls0 ws0">Receive Acknowledge</div><div class="t m0 x83 h7 y3d27 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Acknowledge signal was received after the completion of one byte of data transmission on the bus</div><div class="t m0 x83 h7 y3d28 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>No acknowledge signal detected</div><div class="t m0 x9 h1b y3d29 ff1 fsc fc0 sc0 ls0 ws0">38.3.5<span class="_ _b"> </span>I2C Data I/O register (I2C<span class="ff7 ws24e">x</span>_D)</div><div class="t m0 x9 h7 y3d2a ff2 fs4 fc0 sc0 ls0 ws0">Address: Base address + 4h offset</div><div class="t m0 x81 h1d y3d2b ff2 fsd fc0 sc0 ls0 ws284">Bit<span class="_ _165"> </span>7 6 5 4 3 2 1 0</div><div class="t m0 x1 h7 y3d2c ff2 fs4 fc0 sc0 ls0 ws491">Read <span class="ve">DATA</span></div><div class="t m0 x8b h7 y3d2d ff2 fs4 fc0 sc0 ls0">Write</div><div class="t m0 x12c h7 y3d2e ff2 fs4 fc0 sc0 ls0 ws2ab">Reset <span class="ls1c4 ws28a v1b">00000000<span class="_ _19a"></span></span></div><div class="t m0 x122 h10 y17b ff1 fs4 fc0 sc0 ls0 ws0">Chapter 38 Inter-Integrated Circuit (I2C)</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>695</div><a class="l" href="#pf2b8" data-dest-detail='[696,"XYZ",null,685.6,null]'><div class="d m1" style="border-style:none;position:absolute;left:321.999000px;bottom:125.267000px;width:24.003000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
