<div id="pf2b9" class="pf w0 h0" data-page-no="2b9"><div class="pc pc2b9 w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg2b9.png"/><div class="t m0 x2f h9 yf57 ff1 fs2 fc0 sc0 ls0 ws20b">I2C<span class="ff7">x</span><span class="ws0">_C2 field descriptions (continued)</span></div><div class="t m0 x12c h10 yf84 ff1 fs4 fc0 sc0 ls0 ws259">Field Description</div><div class="t m0 x83 h7 yff6 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Normal drive mode</div><div class="t m0 x83 h7 yff7 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>High drive mode</div><div class="t m0 x97 h7 y101c ff2 fs4 fc0 sc0 ls0">4</div><div class="t m0 x95 h7 y101d ff2 fs4 fc0 sc0 ls0">SBRC</div><div class="t m0 x83 h7 y101c ff2 fs4 fc0 sc0 ls0 ws0">Slave Baud Rate Control</div><div class="t m0 x83 h7 y101e ff2 fs4 fc0 sc0 ls0 ws0">Enables independent slave mode baud rate at maximum frequency, which forces clock stretching on SCL</div><div class="t m0 x83 h7 y10d8 ff2 fs4 fc0 sc0 ls0 ws0">in very fast I2C modes. To a slave, an example of a &quot;very fast&quot; mode is when the master transfers at 40</div><div class="t m0 x83 h7 y3d50 ff2 fs4 fc0 sc0 ls0 ws0">kbps but the slave can capture the master&apos;s data at only 10 kbps.</div><div class="t m0 x83 h7 y3d51 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>The slave baud rate follows the master baud rate and clock stretching may occur</div><div class="t m0 x83 h7 y3d52 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Slave baud rate is independent of the master baud rate</div><div class="t m0 x97 h7 y10dc ff2 fs4 fc0 sc0 ls0">3</div><div class="t m0 x34 h7 y3d53 ff2 fs4 fc0 sc0 ls0">RMEN</div><div class="t m0 x83 h7 y10dc ff2 fs4 fc0 sc0 ls0 ws0">Range Address Matching Enable</div><div class="t m0 x83 h7 y1144 ff2 fs4 fc0 sc0 ls0 ws0">This bit controls slave address matching for addresses between the values of the A1 and RA registers.</div><div class="t m0 x83 h7 y162c ff2 fs4 fc0 sc0 ls0 ws0">When this bit is set, a slave address match occurs for any address greater than the value of the A1</div><div class="t m0 x83 h7 y162d ff2 fs4 fc0 sc0 ls0 ws0">register and less than or equal to the value of the RA register.</div><div class="t m0 x83 h7 y11d7 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Range mode disabled. No address match occurs for an address within the range of values of the A1</div><div class="t m0 x5 h7 y120a ff2 fs4 fc0 sc0 ls0 ws0">and RA registers.</div><div class="t m0 x83 h7 y120b ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Range mode enabled. Address matching occurs when a slave receives an address within the range of</div><div class="t m0 x5 h7 y170e ff2 fs4 fc0 sc0 ls0 ws0">values of the A1 and RA registers.</div><div class="t m0 x1 h7 y120d ff2 fs4 fc0 sc0 ls0">2â€“0</div><div class="t m0 x50 h7 y1651 ff2 fs4 fc0 sc0 ls0">AD[10:8]</div><div class="t m0 x83 h7 y120d ff2 fs4 fc0 sc0 ls0 ws0">Slave Address</div><div class="t m0 x83 h7 y248c ff2 fs4 fc0 sc0 ls0 ws0">Contains the upper three bits of the slave address in the 10-bit address scheme. This field is valid only</div><div class="t m0 x83 h7 y1652 ff2 fs4 fc0 sc0 ls0 ws0">while the ADEXT bit is set.</div><div class="t m0 x9 h1b y3d54 ff1 fsc fc0 sc0 ls0 ws0">38.3.7<span class="_ _b"> </span>I2C Programmable Input Glitch Filter register (I2C<span class="ff7 ws24e">x</span>_FLT)</div><div class="t m0 x9 h7 y3d55 ff2 fs4 fc0 sc0 ls0 ws0">Address: Base address + 6h offset</div><div class="t m0 x81 h1d y3d56 ff2 fsd fc0 sc0 ls0 ws284">Bit<span class="_ _165"> </span>7 6 5 4 3 2 1 0</div><div class="t m0 x1 h7 y3d57 ff2 fs4 fc0 sc0 ls0 ws29d">Read <span class="ws493 v15">SHEN </span><span class="ws494">STOPF <span class="ws495 v15">STOPIE FLT</span></span></div><div class="t m0 x8b h7 y3d58 ff2 fs4 fc0 sc0 ls0 ws496">Write w1c</div><div class="t m0 x12c h7 y2d45 ff2 fs4 fc0 sc0 ls0 ws2ab">Reset <span class="ls1c4 ws28a v1b">00000000<span class="_ _19a"></span></span></div><div class="t m0 x46 h9 y3d59 ff1 fs2 fc0 sc0 ls0 ws20b">I2C<span class="ff7">x</span><span class="ws0">_FLT field descriptions</span></div><div class="t m0 x12c h10 y3d5a ff1 fs4 fc0 sc0 ls0 ws259">Field Description</div><div class="t m0 x97 h7 y3537 ff2 fs4 fc0 sc0 ls0">7</div><div class="t m0 x95 h7 y345d ff2 fs4 fc0 sc0 ls0">SHEN</div><div class="t m0 x83 h7 y3537 ff2 fs4 fc0 sc0 ls0 ws0">Stop Hold Enable</div><div class="t m0 x83 h7 y3d5b ff2 fs4 fc0 sc0 ls0 ws0">Set this bit to hold off entry to stop mode when any data transmission or reception is occurring.</div><div class="t m0 x83 h7 y36e4 ff2 fs4 fc0 sc0 ls0 ws0">The following scenario explains the holdoff functionality:</div><div class="t m0 xe2 h7 yf7d ff2 fs4 fc0 sc0 ls0 ws0">1.<span class="_ _11"> </span>The I2C module is configured for a basic transfer, and the SHEN bit is set to 1.</div><div class="t m0 xe2 h7 y3d5c ff2 fs4 fc0 sc0 ls0 ws0">2.<span class="_ _11"> </span>A transfer begins.</div><div class="t m0 xe2 h7 y3d5d ff2 fs4 fc0 sc0 ls0 ws0">3.<span class="_ _11"> </span>The MCU signals the I2C module to enter stop mode.</div><div class="t m0 xe2 h7 y3d5e ff2 fs4 fc0 sc0 ls0 ws0">4.<span class="_ _11"> </span>The byte currently being transferred, including both address and data, completes its transfer.</div><div class="t m0 xe2 h7 y3d5f ff2 fs4 fc0 sc0 ls0 ws0">5.<span class="_ _11"> </span>The I2C slave or master acknowledges that the in-transfer byte completed its transfer and</div><div class="t m0 x147 h7 y3d60 ff2 fs4 fc0 sc0 ls0 ws0">acknowledges the request to enter stop mode.</div><div class="t m0 xe2 h7 y3d61 ff2 fs4 fc0 sc0 ls0 ws0">6.<span class="_ _11"> </span>After receiving the I2C module&apos;s acknowledgment of the request to enter stop mode, the MCU</div><div class="t m0 x147 h7 y3d62 ff2 fs4 fc0 sc0 ls0 ws0">determines whether to shut off the I2C module&apos;s clock.</div><div class="t m0 x1b h7 y3d63 ff5 fs4 fc0 sc0 ls0 ws0">Table continues on the next page...</div><div class="t m0 x122 h10 y17b ff1 fs4 fc0 sc0 ls0 ws0">Chapter 38 Inter-Integrated Circuit (I2C)</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>697</div><a class="l" href="#pf2b9" data-dest-detail='[697,"XYZ",null,211.167,null]'><div class="d m1" style="border-style:none;position:absolute;left:125.499000px;bottom:285.667000px;width:25.002000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2ba" data-dest-detail='[698,"XYZ",null,550.117,null]'><div class="d m1" style="border-style:none;position:absolute;left:178.997000px;bottom:294.667000px;width:30.006000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2ba" data-dest-detail='[698,"XYZ",null,470.617,null]'><div class="d m1" style="border-style:none;position:absolute;left:233.494000px;bottom:285.667000px;width:33.012000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2ba" data-dest-detail='[698,"XYZ",null,361.117,null]'><div class="d m1" style="border-style:none;position:absolute;left:409.999000px;bottom:285.667000px;width:16.002000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2ba" data-dest-detail='[698,"XYZ",null,550.117,null]'><div class="d m1" style="border-style:none;position:absolute;left:185.999000px;bottom:276.667000px;width:16.002000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
