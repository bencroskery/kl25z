<div id="pf2c0" class="pf w0 h0" data-page-no="2c0"><div class="pc pc2c0 w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg2c0.png"/><div class="t m0 x9 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">If the slave receiver does not acknowledge the master in the ninth bit, the slave must</div><div class="t m0 x9 hf yf7 ff3 fs5 fc0 sc0 ls0 ws0">leave SDA high. The master interprets the failed acknowledgement as an unsuccessful</div><div class="t m0 x9 hf yf8 ff3 fs5 fc0 sc0 ls0 ws0">data transfer.</div><div class="t m0 x9 hf y505 ff3 fs5 fc0 sc0 ls0 ws0">If the master receiver does not acknowledge the slave transmitter after a data byte</div><div class="t m0 x9 hf y629 ff3 fs5 fc0 sc0 ls0 ws0">transmission, the slave interprets it as an end to data transfer and releases the SDA line.</div><div class="t m0 x9 hf y673 ff3 fs5 fc0 sc0 ls0 ws0">In the case of a failed acknowledgement by either the slave or master, the data transfer is</div><div class="t m0 x9 hf y674 ff3 fs5 fc0 sc0 ls0 ws0">aborted and the master does one of two things:</div><div class="t m0 x33 hf y23f0 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Relinquishes the bus by generating a STOP signal.</div><div class="t m0 x33 hf y23f1 ff3 fs5 fc0 sc0 ls0 ws0">•<span class="_ _11"> </span>Commences a new call by generating a repeated START signal.</div><div class="t m0 x9 h1b y3dfc ff1 fsc fc0 sc0 ls0 ws0">38.4.1.4<span class="_ _b"> </span>STOP signal</div><div class="t m0 x9 hf y3dfd ff3 fs5 fc0 sc0 ls0 ws0">The master can terminate the communication by generating a STOP signal to free the</div><div class="t m0 x9 hf y3dfe ff3 fs5 fc0 sc0 ls0 ws0">bus. A STOP signal is defined as a low-to-high transition of SDA while SCL is asserted.</div><div class="t m0 x9 hf y3dff ff3 fs5 fc0 sc0 ls0 ws0">The master can generate a STOP signal even if the slave has generated an</div><div class="t m0 x9 hf y1eef ff3 fs5 fc0 sc0 ls0 ws0">acknowledgement, at which point the slave must release the bus.</div><div class="t m0 x9 h1b y3e00 ff1 fsc fc0 sc0 ls0 ws0">38.4.1.5<span class="_ _b"> </span>Repeated START signal</div><div class="t m0 x9 hf y3e01 ff3 fs5 fc0 sc0 ls0 ws0">The master may generate a START signal followed by a calling command without</div><div class="t m0 x9 hf y3e02 ff3 fs5 fc0 sc0 ls0 ws0">generating a STOP signal first. This action is called a repeated START. The master uses</div><div class="t m0 x9 hf y3e03 ff3 fs5 fc0 sc0 ls0 ws0">a repeated START to communicate with another slave or with the same slave in a</div><div class="t m0 x9 hf y3e04 ff3 fs5 fc0 sc0 ls0 ws0">different mode (transmit/receive mode) without releasing the bus.</div><div class="t m0 x9 h1b y3e05 ff1 fsc fc0 sc0 ls0 ws0">38.4.1.6<span class="_ _b"> </span>Arbitration procedure</div><div class="t m0 x9 hf y3e06 ff3 fs5 fc0 sc0 ls0 ws0">The I2C bus is a true multimaster bus that allows more than one master to be connected</div><div class="t m0 x9 hf y3e07 ff3 fs5 fc0 sc0 ls0 ws0">on it.</div><div class="t m0 x9 hf y3e08 ff3 fs5 fc0 sc0 ls0 ws0">If two or more masters try to control the bus at the same time, a clock synchronization</div><div class="t m0 x9 hf y3e09 ff3 fs5 fc0 sc0 ls0 ws0">procedure determines the bus clock. The bus clock&apos;s low period is equal to the longest</div><div class="t m0 x9 hf y3e0a ff3 fs5 fc0 sc0 ls0 ws0">clock low period, and the high period is equal to the shortest one among the masters.</div><div class="t m0 x9 hf y2051 ff3 fs5 fc0 sc0 ls0 ws0">The relative priority of the contending masters is determined by a data arbitration</div><div class="t m0 x9 hf y3e0b ff3 fs5 fc0 sc0 ls0 ws0">procedure. A bus master loses arbitration if it transmits logic level 1 while another master</div><div class="t m0 x9 hf y3e0c ff3 fs5 fc0 sc0 ls0 ws0">transmits logic level 0. The losing masters immediately switch to slave receive mode and</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">704<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
