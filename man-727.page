<div id="pf2d7" class="pf w0 h0" data-page-no="2d7"><div class="pc pc2d7 w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg2d7.png"/><div class="t m0 x1d h9 y1a5 ff1 fs2 fc0 sc0 ls0 ws20b">UART<span class="ff7">x</span><span class="ws0">_C1 field descriptions</span></div><div class="t m0 x12c h10 y1a6 ff1 fs4 fc0 sc0 ls0 ws259">Field Description</div><div class="t m0 x97 h7 y1a7 ff2 fs4 fc0 sc0 ls0">7</div><div class="t m0 x4f h7 y1a8 ff2 fs4 fc0 sc0 ls0">LOOPS</div><div class="t m0 x83 h7 y1a7 ff2 fs4 fc0 sc0 ls0 ws0">Loop Mode Select</div><div class="t m0 x83 h7 y1577 ff2 fs4 fc0 sc0 ls0 ws0">Selects between loop back modes and normal 2-pin full-duplex modes. When LOOPS is set, the</div><div class="t m0 x83 h7 y1578 ff2 fs4 fc0 sc0 ls0 ws0">transmitter output is internally connected to the receiver input.</div><div class="t m0 x83 h7 y103c ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Normal operation - UART _RX and UART _TX use separate pins.</div><div class="t m0 x83 h7 y1de ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Loop mode or single-wire mode where transmitter outputs are internally connected to receiver input.</div><div class="t m0 x5 h7 y1df ff2 fs4 fc0 sc0 ls0 ws0">(See RSRC bit.) UART _RX pin is not used by UART .</div><div class="t m0 x97 h7 y7fe ff2 fs4 fc0 sc0 ls0">6</div><div class="t m0 x50 h7 y47e ff2 fs4 fc0 sc0 ls0">DOZEEN</div><div class="t m0 x83 h7 y7fe ff2 fs4 fc0 sc0 ls0 ws0">Doze Enable</div><div class="t m0 x83 h7 y167f ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>UART is enabled in Wait mode.</div><div class="t m0 x83 h7 y1680 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>UART is disabled in Wait mode.</div><div class="t m0 x97 h7 y4079 ff2 fs4 fc0 sc0 ls0">5</div><div class="t m0 x95 h7 y407a ff2 fs4 fc0 sc0 ls0">RSRC</div><div class="t m0 x83 h7 y4079 ff2 fs4 fc0 sc0 ls0 ws0">Receiver Source Select</div><div class="t m0 x83 h7 y2971 ff2 fs4 fc0 sc0 ls0 ws0">This bit has no meaning or effect unless the LOOPS bit is set to 1. When LOOPS is set, the receiver input</div><div class="t m0 x83 h7 y407b ff2 fs4 fc0 sc0 ls0 ws0">is internally connected to the UART _TX pin and RSRC determines whether this connection is also</div><div class="t m0 x83 h7 y1400 ff2 fs4 fc0 sc0 ls0 ws0">connected to the transmitter output.</div><div class="t m0 x83 h7 yebb ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Provided LOOPS is set, RSRC is cleared, selects internal loop back mode and the UART does not</div><div class="t m0 x5 h7 y3ed ff2 fs4 fc0 sc0 ls0 ws0">use the UART _RX pins.</div><div class="t m0 x83 h7 y407c ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Single-wire UART mode where the UART _TX pin is connected to the transmitter output and receiver</div><div class="t m0 x5 h7 yebc ff2 fs4 fc0 sc0 ls0">input.</div><div class="t m0 x97 h7 y1f20 ff2 fs4 fc0 sc0 ls0">4</div><div class="t m0 x39 h7 y25c7 ff2 fs4 fc0 sc0 ls0">M</div><div class="t m0 x83 h7 y1f20 ff2 fs4 fc0 sc0 ls0 ws0">9-Bit or 8-Bit Mode Select</div><div class="t m0 x83 h7 y1f0 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Receiver and transmitter use 8-bit data characters.</div><div class="t m0 x83 h7 y407d ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Receiver and transmitter use 9-bit data characters.</div><div class="t m0 x97 h7 y407e ff2 fs4 fc0 sc0 ls0">3</div><div class="t m0 x34 h7 yee6 ff2 fs4 fc0 sc0 ls0">WAKE</div><div class="t m0 x83 h7 y407e ff2 fs4 fc0 sc0 ls0 ws0">Receiver Wakeup Method Select</div><div class="t m0 x83 h7 y2ca ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Idle-line wakeup.</div><div class="t m0 x83 h7 y11a0 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Address-mark wakeup.</div><div class="t m0 x97 h7 y11f7 ff2 fs4 fc0 sc0 ls0">2</div><div class="t m0 x8b h7 y407f ff2 fs4 fc0 sc0 ls0">ILT</div><div class="t m0 x83 h7 y11f7 ff2 fs4 fc0 sc0 ls0 ws0">Idle Line Type Select</div><div class="t m0 x83 h7 y4080 ff2 fs4 fc0 sc0 ls0 ws0">Setting this bit to 1 ensures that the stop bits and logic 1 bits at the end of a character do not count toward</div><div class="t m0 x83 h7 y4081 ff2 fs4 fc0 sc0 ls0 ws0">the 10 to 13 bit times of logic high level needed by the idle line detection logic.</div><div class="t m0 x83 h7 y4082 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Idle character bit count starts after start bit.</div><div class="t m0 x83 h7 yb84 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Idle character bit count starts after stop bit.</div><div class="t m0 x97 h7 y4083 ff2 fs4 fc0 sc0 ls0">1</div><div class="t m0 x8b h7 y1235 ff2 fs4 fc0 sc0 ls0">PE</div><div class="t m0 x83 h7 y4083 ff2 fs4 fc0 sc0 ls0 ws0">Parity Enable</div><div class="t m0 x83 h7 y4084 ff2 fs4 fc0 sc0 ls0 ws0">Enables hardware parity generation and checking. When parity is enabled, the bit immediately before the</div><div class="t m0 x83 h7 y20f6 ff2 fs4 fc0 sc0 ls0 ws0">stop bit is treated as the parity bit.</div><div class="t m0 x83 h7 y20f7 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>No hardware parity generation or checking.</div><div class="t m0 x83 h7 y4085 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Parity enabled.</div><div class="t m0 x97 h7 y1238 ff2 fs4 fc0 sc0 ls0">0</div><div class="t m0 x8b h7 y4086 ff2 fs4 fc0 sc0 ls0">PT</div><div class="t m0 x83 h7 y1238 ff2 fs4 fc0 sc0 ls0 ws0">Parity Type</div><div class="t m0 x83 h7 y25d ff2 fs4 fc0 sc0 ls0 ws0">Provided parity is enabled (PE = 1), this bit selects even or odd parity. Odd parity means the total number</div><div class="t m0 x83 h7 y4087 ff2 fs4 fc0 sc0 ls0 ws0">of 1s in the data character, including the parity bit, is odd. Even parity means the total number of 1s in the</div><div class="t m0 x83 h7 y1172 ff2 fs4 fc0 sc0 ls0 ws0">data character, including the parity bit, is even.</div><div class="t m0 x83 h7 y2983 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Even parity.</div><div class="t m0 x83 h7 y261 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Odd parity.</div><div class="t m0 x44 h10 y17b ff1 fs4 fc0 sc0 ls0 ws0">Chapter 39 Universal Asynchronous Receiver/Transmitter (UART0)</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>727</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
