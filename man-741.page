<div id="pf2e5" class="pf w0 h0" data-page-no="2e5"><div class="pc pc2e5 w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg2e5.png"/><div class="t m0 x9 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">status flag is set and the new data is lost. Because the UART receiver is double-buffered,</div><div class="t m0 x9 hf yf7 ff3 fs5 fc0 sc0 ls0 ws0">the program has one full character time after UART_S1[RDRF] is set before the data in</div><div class="t m0 x9 hf yf8 ff3 fs5 fc0 sc0 ls0 ws0">the receive data buffer must be read to avoid a receiver overrun.</div><div class="t m0 x9 hf y505 ff3 fs5 fc0 sc0 ls0 ws0">When a program detects that the receive data register is full (UART_S1[RDRF] = 1), it</div><div class="t m0 x9 hf y629 ff3 fs5 fc0 sc0 ls0 ws0">gets the data from the receive data register by reading UART_D. Refer to <span class="fc1">Interrupts and</span></div><div class="t m0 x9 hf y62a ff3 fs5 fc1 sc0 ls0 ws0">status flags<span class="fc0"> for details about flag clearing.</span></div><div class="t m0 x9 h1b y62b ff1 fsc fc0 sc0 ls0 ws0">39.3.3.1<span class="_ _b"> </span>Data sampling technique</div><div class="t m0 x9 hf y62c ff3 fs5 fc0 sc0 ls0 ws0">The UART receiver supports an oversampling rate of between 4× and 32× of the baud</div><div class="t m0 x9 hf y14cd ff3 fs5 fc0 sc0 ls0 ws0">rate clock for sampling. The receiver starts by taking logic level samples at the</div><div class="t m0 x9 hf y1545 ff3 fs5 fc0 sc0 ls0 ws0">oversampling rate times the baud rate to search for a falling edge on the UART_RX serial</div><div class="t m0 x9 hf y18a6 ff3 fs5 fc0 sc0 ls0 ws0">data input pin. A falling edge is defined as a logic 0 sample after three consecutive logic</div><div class="t m0 x9 hf y18a7 ff3 fs5 fc0 sc0 ls0 ws0">1 samples. The oversampling baud rate clock divides the bit time into 4 to 32 segments</div><div class="t m0 x9 hf y2c61 ff3 fs5 fc0 sc0 ls0 ws0">from 1 to OSR (where OSR is the configured oversampling ratio). When a falling edge is</div><div class="t m0 x9 hf y41a0 ff3 fs5 fc0 sc0 ls0 ws0">located, three more samples are taken at (OSR/2), (OSR/2)+1, and (OSR/2)+2 to make</div><div class="t m0 x9 hf y41a1 ff3 fs5 fc0 sc0 ls0 ws0">sure this was a real start bit and not merely noise. If at least two of these three samples</div><div class="t m0 x9 hf y41a2 ff3 fs5 fc0 sc0 ls0 ws0">are 0, the receiver assumes it is synchronized to a receive character. If another falling</div><div class="t m0 x9 hf y41a3 ff3 fs5 fc0 sc0 ls0 ws0">edge is detected before the receiver is considered synchronized, the receiver restarts the</div><div class="t m0 x9 hf y41a4 ff3 fs5 fc0 sc0 ls0 ws0">sampling from the first segment.</div><div class="t m0 x9 hf y41a5 ff3 fs5 fc0 sc0 ls0 ws0">The receiver then samples each bit time, including the start and stop bits, at (OSR/2),</div><div class="t m0 x9 hf y41a6 ff3 fs5 fc0 sc0 ls0 ws0">(OSR/2)+1, and (OSR/2)+2 to determine the logic level for that bit. The logic level is</div><div class="t m0 x9 hf y41a7 ff3 fs5 fc0 sc0 ls0 ws0">interpreted to be that of the majority of the samples taken during the bit time. If any</div><div class="t m0 x9 hf y41a8 ff3 fs5 fc0 sc0 ls0 ws0">sample in any bit time, including the start and stop bits, in a character frame fails to agree</div><div class="t m0 x9 hf y41a9 ff3 fs5 fc0 sc0 ls0 ws0">with the logic level for that bit, the noise flag (UART_S1[NF]) is set when the received</div><div class="t m0 x9 hf y41aa ff3 fs5 fc0 sc0 ls0 ws0">character is transferred to the receive data buffer.</div><div class="t m0 x9 hf y41ab ff3 fs5 fc0 sc0 ls0 ws0">When the UART receiver is configured to sample on both edges of the baud rate clock,</div><div class="t m0 x9 hf y41ac ff3 fs5 fc0 sc0 ls0 ws0">the number of segments in each received bit is effectively doubled (from 1 to OSR*2).</div><div class="t m0 x9 hf y41ad ff3 fs5 fc0 sc0 ls0 ws0">The start and data bits are then sampled at OSR, OSR+1 and OSR+2. Sampling on both</div><div class="t m0 x9 hf y41ae ff3 fs5 fc0 sc0 ls0 ws0">edges of the clock must be enabled for oversampling rates of 4× to 7× and is optional for</div><div class="t m0 x9 hf y41af ff3 fs5 fc0 sc0 ls0 ws0">higher oversampling rates.</div><div class="t m0 x9 hf y41b0 ff3 fs5 fc0 sc0 ls0 ws0">The falling edge detection logic continuously looks for falling edges. If an edge is</div><div class="t m0 x9 hf y41b1 ff3 fs5 fc0 sc0 ls0 ws0">detected, the sample clock is resynchronized to bit times (unless resynchronization has</div><div class="t m0 x9 hf y41b2 ff3 fs5 fc0 sc0 ls0 ws0">been disabled). This improves the reliability of the receiver in the presence of noise or</div><div class="t m0 x9 hf y41b3 ff3 fs5 fc0 sc0 ls0 ws0">mismatched baud rates. It does not improve worst case analysis because some characters</div><div class="t m0 x9 hf y41b4 ff3 fs5 fc0 sc0 ls0 ws0">do not have any extra falling edges anywhere in the character frame.</div><div class="t m0 x44 h10 y141 ff1 fs4 fc0 sc0 ls0 ws0">Chapter 39 Universal Asynchronous Receiver/Transmitter (UART0)</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>741</div><a class="l" href="#pf2e9" data-dest-detail='[745,"XYZ",null,590.7,null]'><div class="d m1" style="border-style:none;position:absolute;left:469.226000px;bottom:636.200000px;width:78.148000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2e9" data-dest-detail='[745,"XYZ",null,590.7,null]'><div class="d m1" style="border-style:none;position:absolute;left:54.000000px;bottom:620.200000px;width:62.608000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
