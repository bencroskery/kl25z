<div id="pf2e6" class="pf w0 h0" data-page-no="2e6"><div class="pc pc2e6 w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg2e6.png"/><div class="t m0 x9 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">In the case of a framing error, provided the received character was not a break character,</div><div class="t m0 x9 hf yf7 ff3 fs5 fc0 sc0 ls0 ws0">the sampling logic that searches for a falling edge is filled with three logic 1 samples so</div><div class="t m0 x9 hf yf8 ff3 fs5 fc0 sc0 ls0 ws0">that a new start bit can be detected almost immediately.</div><div class="t m0 x9 h1b y34a7 ff1 fsc fc0 sc0 ls0 ws0">39.3.3.2<span class="_ _b"> </span>Receiver wakeup operation</div><div class="t m0 x9 hf ya31 ff3 fs5 fc0 sc0 ls0 ws0">Receiver wakeup is a hardware mechanism that allows an UART receiver to ignore the</div><div class="t m0 x9 hf ya19 ff3 fs5 fc0 sc0 ls0 ws0">characters in a message intended for a different UART receiver. In such a system, all</div><div class="t m0 x9 hf ya1a ff3 fs5 fc0 sc0 ls0 ws0">receivers evaluate the first character(s) of each message, and as soon as they determine</div><div class="t m0 x9 hf y1395 ff3 fs5 fc0 sc0 ls0 ws0">the message is intended for a different receiver, they write logic 1 to the receiver wake up</div><div class="t m0 x9 hf y1396 ff3 fs5 fc0 sc0 ls0 ws0">control bit(UART_C2[RWU]). When RWU bit is set, the status flags associated with the</div><div class="t m0 x9 hf y3e0d ff3 fs5 fc0 sc0 ls0 ws0">receiver, with the exception of the idle bit, IDLE, when UART_S2[RWUID] bit is set,</div><div class="t m0 x9 hf y3e0e ff3 fs5 fc0 sc0 ls0 ws0">are inhibited from setting, thus eliminating the software overhead for handling the</div><div class="t m0 x9 hf y3e0f ff3 fs5 fc0 sc0 ls0 ws0">unimportant message characters. At the end of a message, or at the beginning of the next</div><div class="t m0 x9 hf y3e10 ff3 fs5 fc0 sc0 ls0 ws0">message, all receivers automatically force UART_C2[RWU] to 0 so all receivers wake</div><div class="t m0 x9 hf y3e11 ff3 fs5 fc0 sc0 ls0 ws0">up in time to look at the first character(s) of the next message.</div><div class="t m0 x9 h8 y41b5 ff1 fs5 fc0 sc0 ls0 ws0">39.3.3.2.1<span class="_ _b"> </span>Idle-line wakeup</div><div class="t m0 x9 hf y41b6 ff3 fs5 fc0 sc0 ls0 ws0">When wake is cleared, the receiver is configured for idle-line wakeup. In this mode,</div><div class="t m0 x9 hf y24d1 ff3 fs5 fc0 sc0 ls0 ws0">UART_C2[RWU] is cleared automatically when the receiver detects a full character time</div><div class="t m0 x9 hf y24d2 ff3 fs5 fc0 sc0 ls0 ws0">of the idle-line level. The UART_C1[M] and UART_C4[M10] control bit selects 8-bit to</div><div class="t m0 x9 hf y41b7 ff3 fs5 fc0 sc0 ls0 ws0">10-bit data mode and the UART_BDH[SBNS] bit selects 1-bit or 2-bit stop bit number</div><div class="t m0 x9 hf y41b8 ff3 fs5 fc0 sc0 ls0 ws0">that determines how many bit times of idle are needed to constitute a full character time,</div><div class="t m0 x9 hf y41b9 ff3 fs5 fc0 sc0 ls0 ws0">10 to 13 bit times because of the start and stop bits.</div><div class="t m0 x9 hf y41ba ff3 fs5 fc0 sc0 ls0 ws0">When UART_C2[RWU] is one and UART_S2[RWUID] is zero, the idle condition that</div><div class="t m0 x9 hf y41bb ff3 fs5 fc0 sc0 ls0 ws0">wakes up the receiver does not set the UART_S1[IDLE] flag. The receiver wakes up and</div><div class="t m0 x9 hf y41bc ff3 fs5 fc0 sc0 ls0 ws0">waits for the first data character of the next message that sets the UART_S1[RDRF] flag</div><div class="t m0 x9 hf y41bd ff3 fs5 fc0 sc0 ls0 ws0">and generates an interrupt if enabled. When UART_S2[RWUID] is one, any idle</div><div class="t m0 x9 hf y41be ff3 fs5 fc0 sc0 ls0 ws0">condition sets the UART_S1[IDLE] flag and generates an interrupt if enabled, regardless</div><div class="t m0 x9 hf y41bf ff3 fs5 fc0 sc0 ls0 ws0">of whether UART_C2[RWU] is zero or one.</div><div class="t m0 x9 hf y41c0 ff3 fs5 fc0 sc0 ls0 ws0">The idle-line type (UART_C1[ILT]) control bit selects one of two ways to detect an idle</div><div class="t m0 x9 hf y41c1 ff3 fs5 fc0 sc0 ls0 ws0">line. When UART_C1[ILT] is cleared, the idle bit counter starts after the start bit so the</div><div class="t m0 x9 hf y41c2 ff3 fs5 fc0 sc0 ls0 ws0">stop bit and any logic 1s at the end of a character count toward the full character time of</div><div class="t m0 x9 hf y41c3 ff3 fs5 fc0 sc0 ls0 ws0">idle. When UART_C1[ILT] is set, the idle bit counter does not start until after the stop bit</div><div class="t m0 x9 hf y41c4 ff3 fs5 fc0 sc0 ls0 ws0">time, so the idle detection is not affected by the data in the last character of the previous</div><div class="t m0 x9 hf y41c5 ff3 fs5 fc0 sc0 ls0">message.</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">742<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
