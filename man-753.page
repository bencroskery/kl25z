<div id="pf2f1" class="pf w0 h0" data-page-no="2f1"><div class="pc pc2f1 w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg2f1.png"/><div class="t m0 xc2 h9 yf57 ff1 fs2 fc0 sc0 ls0 ws20b">UART<span class="ff7">x</span><span class="ws0">_C1 field descriptions (continued)</span></div><div class="t m0 x12c h10 yf84 ff1 fs4 fc0 sc0 ls0 ws25f">Field Description</div><div class="t m0 x83 h7 yff6 ff2 fs4 fc0 sc0 ls0 ws0">This bit has no meaning or effect unless the LOOPS bit is set to 1. When LOOPS is set, the receiver input</div><div class="t m0 x83 h7 y13d9 ff2 fs4 fc0 sc0 ls0 ws0">is internally connected to the TxD pin and RSRC determines whether this connection is also connected to</div><div class="t m0 x83 h7 y1bb6 ff2 fs4 fc0 sc0 ls0 ws0">the transmitter output.</div><div class="t m0 x83 h7 y13b6 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Provided LOOPS is set, RSRC is cleared, selects internal loop back mode and the UART does not</div><div class="t m0 x5 h7 y13b7 ff2 fs4 fc0 sc0 ls0 ws0">use the RxD pins.</div><div class="t m0 x83 h7 y1ffb ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Single-wire UART mode where the TxD pin is connected to the transmitter output and receiver input.</div><div class="t m0 x97 h7 y1ffc ff2 fs4 fc0 sc0 ls0">4</div><div class="t m0 x39 h7 y1a69 ff2 fs4 fc0 sc0 ls0">M</div><div class="t m0 x83 h7 y1ffc ff2 fs4 fc0 sc0 ls0 ws0">9-Bit or 8-Bit Mode Select</div><div class="t m0 x83 h7 y1b5f ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Normal - start + 8 data bits (lsb first) + stop.</div><div class="t m0 x83 h7 y429e ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Receiver and transmitter use 9-bit data characters start + 8 data bits (lsb first) + 9th data bit + stop.</div><div class="t m0 x97 h7 y3d53 ff2 fs4 fc0 sc0 ls0">3</div><div class="t m0 x34 h7 y1a6c ff2 fs4 fc0 sc0 ls0">WAKE</div><div class="t m0 x83 h7 y3d53 ff2 fs4 fc0 sc0 ls0 ws0">Receiver Wakeup Method Select</div><div class="t m0 x83 h7 y1744 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Idle-line wakeup.</div><div class="t m0 x83 h7 y13e3 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Address-mark wakeup.</div><div class="t m0 x97 h7 y13e4 ff2 fs4 fc0 sc0 ls0">2</div><div class="t m0 x8b h7 y13e5 ff2 fs4 fc0 sc0 ls0">ILT</div><div class="t m0 x83 h7 y13e4 ff2 fs4 fc0 sc0 ls0 ws0">Idle Line Type Select</div><div class="t m0 x83 h7 y10e2 ff2 fs4 fc0 sc0 ls0 ws0">Setting this bit to 1 ensures that the stop bits and logic 1 bits at the end of a character do not count toward</div><div class="t m0 x83 h7 y1a70 ff2 fs4 fc0 sc0 ls0 ws0">the 10 or 11 bit times of logic high level needed by the idle line detection logic.</div><div class="t m0 x83 h7 y1a72 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Idle character bit count starts after start bit.</div><div class="t m0 x83 h7 y429f ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Idle character bit count starts after stop bit.</div><div class="t m0 x97 h7 y42a0 ff2 fs4 fc0 sc0 ls0">1</div><div class="t m0 x8b h7 y42a1 ff2 fs4 fc0 sc0 ls0">PE</div><div class="t m0 x83 h7 y42a0 ff2 fs4 fc0 sc0 ls0 ws0">Parity Enable</div><div class="t m0 x83 h7 y16dc ff2 fs4 fc0 sc0 ls0 ws0">Enables hardware parity generation and checking. When parity is enabled, the most significant bit (msb) of</div><div class="t m0 x83 h7 y1a75 ff2 fs4 fc0 sc0 ls0 ws0">the data character, eighth or ninth data bit, is treated as the parity bit.</div><div class="t m0 x83 h7 y42a2 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>No hardware parity generation or checking.</div><div class="t m0 x83 h7 y42a3 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Parity enabled.</div><div class="t m0 x97 h7 y2232 ff2 fs4 fc0 sc0 ls0">0</div><div class="t m0 x8b h7 y42a4 ff2 fs4 fc0 sc0 ls0">PT</div><div class="t m0 x83 h7 y2232 ff2 fs4 fc0 sc0 ls0 ws0">Parity Type</div><div class="t m0 x83 h7 y16e2 ff2 fs4 fc0 sc0 ls0 ws0">Provided parity is enabled (PE = 1), this bit selects even or odd parity. Odd parity means the total number</div><div class="t m0 x83 h7 y42a5 ff2 fs4 fc0 sc0 ls0 ws0">of 1s in the data character, including the parity bit, is odd. Even parity means the total number of 1s in the</div><div class="t m0 x83 h7 y42a6 ff2 fs4 fc0 sc0 ls0 ws0">data character, including the parity bit, is even.</div><div class="t m0 x83 h7 y1bce ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>Even parity.</div><div class="t m0 x83 h7 y1b75 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Odd parity.</div><div class="t m0 x9 h1b y42a7 ff1 fsc fc0 sc0 ls0 ws0">40.2.4<span class="_ _b"> </span>UART Control Register 2 (UART<span class="ff7 ws24e">x</span>_C2)</div><div class="t m0 x9 hf y42a8 ff3 fs5 fc0 sc0 ls0 ws0">This register can be read or written at any time.</div><div class="t m0 x9 h7 y42a9 ff2 fs4 fc0 sc0 ls0 ws0">Address: Base address + h offset</div><div class="t m0 x81 h1d y42aa ff2 fsd fc0 sc0 ls0 ws284">Bit<span class="_ _165"> </span>7 6 5 4 3 2 1 0</div><div class="t m0 x1 h7 y42ab ff2 fs4 fc0 sc0 ls0 ws4cd">Read <span class="ws4ce ve">TIE<span class="_ _b6"> </span>TCIE<span class="_ _1c3"> </span>RIE<span class="_ _19"> </span>ILIE<span class="_ _36"> </span>TE<span class="_ _56"> </span>RE<span class="_ _45"> </span>RWU SBK</span></div><div class="t m0 x8b h7 y42ac ff2 fs4 fc0 sc0 ls0">Write</div><div class="t m0 x12c h7 y42ad ff2 fs4 fc0 sc0 ls0 ws2ab">Reset <span class="ls1c4 ws28a v1b">00000000<span class="_ _19a"></span></span></div><div class="t m0 x21 h10 y17b ff1 fs4 fc0 sc0 ls0 ws0">Chapter 40 Universal Asynchronous Receiver/Transmitter (UART1 and UART2)</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">Freescale Semiconductor, Inc.<span class="_ _113"> </span>753</div><a class="l" href="#pf2f2" data-dest-detail='[754,"XYZ",null,685.85,null]'><div class="d m1" style="border-style:none;position:absolute;left:130.998000px;bottom:114.267000px;width:14.004000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2f2" data-dest-detail='[754,"XYZ",null,636.35,null]'><div class="d m1" style="border-style:none;position:absolute;left:183.749000px;bottom:114.267000px;width:20.502000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2f2" data-dest-detail='[754,"XYZ",null,586.85,null]'><div class="d m1" style="border-style:none;position:absolute;left:242.499000px;bottom:114.267000px;width:15.002000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2f2" data-dest-detail='[754,"XYZ",null,537.35,null]'><div class="d m1" style="border-style:none;position:absolute;left:297.995000px;bottom:114.267000px;width:16.010000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2f2" data-dest-detail='[754,"XYZ",null,487.85,null]'><div class="d m1" style="border-style:none;position:absolute;left:356.249000px;bottom:114.267000px;width:11.502000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2f2" data-dest-detail='[754,"XYZ",null,337.15,null]'><div class="d m1" style="border-style:none;position:absolute;left:411.750000px;bottom:114.267000px;width:12.500000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2f2" data-dest-detail='[754,"XYZ",null,255.65,null]'><div class="d m1" style="border-style:none;position:absolute;left:463.254000px;bottom:114.267000px;width:21.492000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2f2" data-dest-detail='[754,"XYZ",null,141.15,null]'><div class="d m1" style="border-style:none;position:absolute;left:520.995000px;bottom:114.267000px;width:18.010000px;height:9.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
