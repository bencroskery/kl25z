<div id="pf2f4" class="pf w0 h0" data-page-no="2f4"><div class="pc pc2f4 w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg2f4.png"/><div class="t m0 xc2 h9 yf57 ff1 fs2 fc0 sc0 ls0 ws20b">UART<span class="ff7">x</span><span class="ws0">_S1 field descriptions (continued)</span></div><div class="t m0 x12c h10 yf84 ff1 fs4 fc0 sc0 ls0 ws25f">Field Description</div><div class="t m0 x83 h7 yff6 ff2 fs4 fc0 sc0 ls0 ws0">all 1s, these bit times and the stop bits time count toward the full character time of logic high, 10 or 11 bit</div><div class="t m0 x83 h7 y13d9 ff2 fs4 fc0 sc0 ls0 ws0">times depending on the M control bit, needed for the receiver to detect an idle line. When ILT is set, the</div><div class="t m0 x83 h7 y1bb6 ff2 fs4 fc0 sc0 ls0 ws0">receiver doesn&apos;t start counting idle bit times until after the stop bits. The stop bits and any logic high bit</div><div class="t m0 x83 h7 y1bb7 ff2 fs4 fc0 sc0 ls0 ws0">times at the end of the previous character do not count toward the full character time of logic high needed</div><div class="t m0 x83 h7 y155d ff2 fs4 fc0 sc0 ls0 ws0">for the receiver to detect an idle line.</div><div class="t m0 x83 h7 y42fa ff2 fs4 fc0 sc0 ls0 ws0">To clear IDLE, read UART_S1 with IDLE set and then read the UART data register (UART_D). After IDLE</div><div class="t m0 x83 h7 y42fb ff2 fs4 fc0 sc0 ls0 ws0">has been cleared, it cannot become set again until after a new character has been received and RDRF</div><div class="t m0 x83 h7 y3d0f ff2 fs4 fc0 sc0 ls0 ws0">has been set. IDLE is set only once even if the receive line remains idle for an extended period.</div><div class="t m0 x83 h7 y42fc ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>No idle line detected.</div><div class="t m0 x83 h7 y42fd ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Idle line was detected.</div><div class="t m0 x97 h7 y3a72 ff2 fs4 fc0 sc0 ls0">3</div><div class="t m0 x8b h7 y3a73 ff2 fs4 fc0 sc0 ls0">OR</div><div class="t m0 x83 h7 y3a72 ff2 fs4 fc0 sc0 ls0 ws0">Receiver Overrun Flag</div><div class="t m0 x83 h7 y42fe ff2 fs4 fc0 sc0 ls0 ws0">OR is set when a new serial character is ready to be transferred to the receive data register (buffer), but</div><div class="t m0 x83 h7 y3a74 ff2 fs4 fc0 sc0 ls0 ws0">the previously received character has not been read from UART_D yet. In this case, the new character,</div><div class="t m0 x83 h7 y42ff ff2 fs4 fc0 sc0 ls0 ws0">and all associated error information, is lost because there is no room to move it into UART_D. To clear</div><div class="t m0 x83 h7 y4300 ff2 fs4 fc0 sc0 ls0 ws0">OR, read UART_S1 with OR set and then read the UART data register (UART_D).</div><div class="t m0 x83 h7 y4301 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>No overrun.</div><div class="t m0 x83 h7 y4302 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Receive overrun (new UART data lost).</div><div class="t m0 x97 h7 y4303 ff2 fs4 fc0 sc0 ls0">2</div><div class="t m0 x8b h7 y1ccc ff2 fs4 fc0 sc0 ls0">NF</div><div class="t m0 x83 h7 y4303 ff2 fs4 fc0 sc0 ls0 ws0">Noise Flag</div><div class="t m0 x83 h7 y3764 ff2 fs4 fc0 sc0 ls0 ws0">The advanced sampling technique used in the receiver takes seven samples during the start bit and three</div><div class="t m0 x83 h7 y4304 ff2 fs4 fc0 sc0 ls0 ws0">samples in each data bit and the stop bits. If any of these samples disagrees with the rest of the samples</div><div class="t m0 x83 h7 y4305 ff2 fs4 fc0 sc0 ls0 ws0">within any bit time in the frame, the flag NF is set at the same time as RDRF is set for the character. To</div><div class="t m0 x83 h7 y4306 ff2 fs4 fc0 sc0 ls0 ws0">clear NF, read UART_S1 and then read the UART data register (UART_D).</div><div class="t m0 x83 h7 y4307 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>No noise detected.</div><div class="t m0 x83 h7 y4308 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Noise detected in the received character in UART_D.</div><div class="t m0 x97 h7 y4309 ff2 fs4 fc0 sc0 ls0">1</div><div class="t m0 x8b h7 y430a ff2 fs4 fc0 sc0 ls0">FE</div><div class="t m0 x83 h7 y4309 ff2 fs4 fc0 sc0 ls0 ws0">Framing Error Flag</div><div class="t m0 x83 h7 y430b ff2 fs4 fc0 sc0 ls0 ws0">FE is set at the same time as RDRF when the receiver detects a logic 0 where the stop bits was expected.</div><div class="t m0 x83 h7 y430c ff2 fs4 fc0 sc0 ls0 ws0">This suggests the receiver was not properly aligned to a character frame. To clear FE, read UART_S1</div><div class="t m0 x83 h7 y430d ff2 fs4 fc0 sc0 ls0 ws0">with FE set and then read the UART data register (UART_D).</div><div class="t m0 x83 h7 y430e ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>No framing error detected. This does not guarantee the framing is correct.</div><div class="t m0 x83 h7 y430f ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Framing error.</div><div class="t m0 x97 h7 y4310 ff2 fs4 fc0 sc0 ls0">0</div><div class="t m0 x8b h7 y4311 ff2 fs4 fc0 sc0 ls0">PF</div><div class="t m0 x83 h7 y4310 ff2 fs4 fc0 sc0 ls0 ws0">Parity Error Flag</div><div class="t m0 x83 h7 y4312 ff2 fs4 fc0 sc0 ls0 ws0">PF is set at the same time as RDRF when parity is enabled (PE = 1) and the parity bit in the received</div><div class="t m0 x83 h7 y4313 ff2 fs4 fc0 sc0 ls0 ws0">character does not agree with the expected parity value. To clear PF, read UART_S1 and then read the</div><div class="t m0 x83 h7 y4314 ff2 fs4 fc0 sc0 ls0 ws0">UART data register (UART_D).</div><div class="t m0 x83 h7 y4315 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _28"> </span>No parity error.</div><div class="t m0 x83 h7 y4316 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _28"> </span>Parity error.</div><div class="t m0 x9 h1b y4317 ff1 fsc fc0 sc0 ls0 ws0">40.2.6<span class="_ _b"> </span>UART Status Register 2 (UART<span class="ff7 ws24e">x</span>_S2)</div><div class="t m0 x9 hf y4318 ff3 fs5 fc0 sc0 ls0 ws0">This register contains one read-only status flag.</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Register definition</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">756<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
