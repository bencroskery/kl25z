<div id="pf2fa" class="pf w0 h0" data-page-no="2fa"><div class="pc pc2fa w0 h0"><img class="bi x0 y8 w2 h5" alt="" src="bg2fa.png"/><div class="t m0 x9 he y17c ff1 fs1 fc0 sc0 ls0 ws0">40.3.1<span class="_ _b"> </span>Baud rate generation</div><div class="t m0 x9 hf y17d ff3 fs5 fc0 sc0 ls0 ws0">As shown in the following figure, the clock source for the UART baud rate generator is</div><div class="t m0 x9 hf y80d ff3 fs5 fc0 sc0 ls0 ws0">the bus-rate clock.</div><div class="c xd6 y436f w84 h1de"><div class="t m0 xad h1df y4370 ff2 fsf fc0 sc0 ls1ca ws2f5">SBR[12:0]<span class="ff3 fs50 ls2a9 ws0"> </span><span class="ws0 v34">Divide By<span class="ff3 fs50 ls2aa"> </span><span class="ls0 v2d">Tx Baud Rate<span class="ff3 fs50"> </span></span></span></div><div class="t m0 x131 h9e y4371 ff2 fsf fc0 sc0 ls1ca ws0">Rx Sampling Clock<span class="ff3 fs50 ls0"> </span></div><div class="t m0 x23 h9e y4372 ff2 fsf fc0 sc0 ls0 ws0">(16 × Baud Rate)<span class="ff3 fs50"> </span></div><div class="t m0 x3d h26 y4373 ff2 fsf fc0 sc0 ls0 ws0">Baud Rate Generator</div><div class="t m0 x81 h1e0 y4374 ff2 fsf fc0 sc0 ls0 ws0">Off If [SBR12:SBR0]  = 0<span class="ff3 fs50 v0"> </span></div><div class="t m0 x30 h9e y4375 ff2 fsf fc0 sc0 ls0 ws0">Baud Rate  =<span class="ff3 fs50 ls2ab"> </span><span class="v1f">SBR[12:0] × 16</span><span class="ff3 fs50 v1f"> </span></div><div class="t m0 xb0 h26 y4376 ff2 fsf fc0 sc0 ls0 ws1bf">16</div><div class="t m0 x29 h9e y4377 ff2 fsf fc0 sc0 ls1ca ws0">Modulo Divide By<span class="ff3 fs50 ls0"> </span></div><div class="t m0 x7e h26 y4378 ff2 fsf fc0 sc0 ls0 ws0">(1 through 8191)</div><div class="t m0 x0 h26 y4379 ff2 fsf fc0 sc0 ls0 ws0">UART Module Clock</div><div class="t m0 x131 h26 y437a ff2 fsf fc0 sc0 ls0 ws0">UART Module Clock</div></div><div class="t m0 xc2 h9 y437b ff1 fs2 fc0 sc0 ls0 ws0">Figure 40-30. UART baud rate generation</div><div class="t m0 x9 hf y437c ff3 fs5 fc0 sc0 ls0 ws0">UART communications require the transmitter and receiver, which typically derive baud</div><div class="t m0 x9 hf y437d ff3 fs5 fc0 sc0 ls0 ws0">rates from independent clock sources, to use the same baud rate. Allowed tolerance on</div><div class="t m0 x9 hf y437e ff3 fs5 fc0 sc0 ls0 ws0">this baud frequency depends on the details of how the receiver synchronizes to the</div><div class="t m0 x9 hf y437f ff3 fs5 fc0 sc0 ls0 ws0">leading edge of the start bit and how bit sampling is performed.</div><div class="t m0 x9 hf y4380 ff3 fs5 fc0 sc0 ls0 ws0">The MCU resynchronizes to bit boundaries on every high-to-low transition. In the worst</div><div class="t m0 x9 hf y4381 ff3 fs5 fc0 sc0 ls0 ws0">case, there are no such transitions in the full 10- or 11-bit or 12-bittime character frame</div><div class="t m0 x9 hf y4382 ff3 fs5 fc0 sc0 ls0 ws0">so any mismatch in baud rate is accumulated for the whole character time. For a</div><div class="t m0 x9 hf y4383 ff3 fs5 fc0 sc0 ls0 ws0">Freescale UART system whose bus frequency is driven by a crystal, the allowed baud</div><div class="t m0 x9 hf y4384 ff3 fs5 fc0 sc0 ls0 ws0">rate mismatch is about ±4.5 percent for 8-bit data format and about ±4 percent for 9-bit</div><div class="t m0 x9 hf y4385 ff3 fs5 fc0 sc0 ls0 ws0">data format. Although baud rate modulo divider settings do not always produce baud</div><div class="t m0 x9 hf y4386 ff3 fs5 fc0 sc0 ls0 ws0">rates that exactly match standard rates, it is normally possible to get within a few percent,</div><div class="t m0 x9 hf y4387 ff3 fs5 fc0 sc0 ls0 ws0">which is acceptable for reliable communications.</div><div class="t m0 x9 he y4388 ff1 fs1 fc0 sc0 ls0 ws0">40.3.2<span class="_ _b"> </span>Transmitter functional description</div><div class="t m0 x9 hf y4389 ff3 fs5 fc0 sc0 ls0 ws0">This section describes the overall block diagram for the UART transmitter, as well as</div><div class="t m0 x9 hf y438a ff3 fs5 fc0 sc0 ls0 ws0">specialized functions for sending break and idle characters.</div><div class="t m0 x9 hf y438b ff3 fs5 fc0 sc0 ls0 ws0">The transmitter output (TxD) idle state defaults to logic high, UART_C3[TXINV] is</div><div class="t m0 x9 hf y438c ff3 fs5 fc0 sc0 ls0 ws0">cleared following reset. The transmitter output is inverted by setting UART_C3[TXINV].</div><div class="t m0 x9 hf y438d ff3 fs5 fc0 sc0 ls0 ws0">The transmitter is enabled by setting the TE bit in UARTxC2. This queues a preamble</div><div class="t m0 x9 hf y438e ff3 fs5 fc0 sc0 ls0 ws0">character that is one full character frame of the idle state. The transmitter then remains</div><div class="t m0 x9 hf y438f ff3 fs5 fc0 sc0 ls0 ws0">idle until data is available in the transmit data buffer. Programs store data into the</div><div class="t m0 x9 hf y4390 ff3 fs5 fc0 sc0 ls0 ws0">transmit data buffer by writing to the UART data register (UART_D).</div><div class="t m0 x9 hf y4391 ff3 fs5 fc0 sc0 ls0 ws0">The central element of the UART transmitter is the transmit shift register that is 10 or 11</div><div class="t m0 x9 hf y4392 ff3 fs5 fc0 sc0 ls0 ws0">or 12 bits long depending on the setting in the UART_C1[M] control bit and</div><div class="t m0 x9 hf y4393 ff3 fs5 fc0 sc0 ls0 ws0">UART_BDH[SBNS] bit. For the remainder of this section, assume UART_C1[M] is</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">762<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
