<div id="pf2fc" class="pf w0 h0" data-page-no="2fc"><div class="pc pc2fc w0 h0"><img class="bi x0 y8 w3 h5" alt="" src="bg2fc.png"/><div class="t m0 x9 hf yf6 ff3 fs5 fc0 sc0 ls0 ws0">The length of the break character is affected by the UART_S2[BRK13] and</div><div class="t m0 x9 hf yf7 ff3 fs5 fc0 sc0 ls0 ws0">UART_C1[M] bits as shown below.</div><div class="t m0 x4a h9 ya87 ff1 fs2 fc0 sc0 ls0 ws0">Table 40-31.<span class="_ _1a"> </span>Break character length</div><div class="t m0 x41 h10 ya88 ff1 fs4 fc0 sc0 ls0 ws0">BRK13<span class="_ _a6"> </span>M<span class="_ _a8"> </span>SBNS<span class="_ _dd"> </span>Break character length</div><div class="t m0 x29 h7 y439d ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _1aa"> </span>0<span class="_ _1aa"> </span>0<span class="_ _135"> </span>10 bit times</div><div class="t m0 x29 h7 y439e ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _1aa"> </span>0<span class="_ _1aa"> </span>1<span class="_ _135"> </span>11 bit times</div><div class="t m0 x29 h7 yc69 ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _1aa"> </span>1<span class="_ _1aa"> </span>0<span class="_ _135"> </span>11 bit times</div><div class="t m0 x29 h7 yb3d ff2 fs4 fc0 sc0 ls0 ws0">0<span class="_ _1aa"> </span>1<span class="_ _1aa"> </span>1<span class="_ _135"> </span>12 bit times</div><div class="t m0 x29 h7 y439f ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _1aa"> </span>0<span class="_ _1aa"> </span>0<span class="_ _135"> </span>13 bit times</div><div class="t m0 x29 h7 y43a0 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _1aa"> </span>0<span class="_ _1aa"> </span>1<span class="_ _135"> </span>14 bit times</div><div class="t m0 x29 h7 y43a1 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _1aa"> </span>1<span class="_ _1aa"> </span>0<span class="_ _135"> </span>14 bit times</div><div class="t m0 x29 h7 y43a2 ff2 fs4 fc0 sc0 ls0 ws0">1<span class="_ _1aa"> </span>1<span class="_ _1aa"> </span>1<span class="_ _135"> </span>15 bit times</div><div class="t m0 x9 he y43a3 ff1 fs1 fc0 sc0 ls0 ws0">40.3.3<span class="_ _b"> </span>Receiver functional description</div><div class="t m0 x9 hf y43a4 ff3 fs5 fc0 sc0 ls0 ws0">In this section, the receiver block diagram is a guide for the overall receiver functional</div><div class="t m0 x9 hf y43a5 ff3 fs5 fc0 sc0 ls0 ws0">description. Next, the data sampling technique used to reconstruct receiver data is</div><div class="t m0 x9 hf y43a6 ff3 fs5 fc0 sc0 ls0 ws0">described in more detail. Finally, two variations of the receiver wakeup function are</div><div class="t m0 x9 hf y43a7 ff3 fs5 fc0 sc0 ls0">explained.</div><div class="t m0 x9 hf y43a8 ff3 fs5 fc0 sc0 ls0 ws0">The receiver input is inverted by setting UART_S2[RXINV]. The receiver is enabled by</div><div class="t m0 x9 hf y43a9 ff3 fs5 fc0 sc0 ls0 ws0">setting the UART_C2[RE] bit. Character frames consist of a start bit of logic 0, eight (or</div><div class="t m0 x9 hf y43aa ff3 fs5 fc0 sc0 ls0 ws0">nine) data bits (lsb first), and one (or two) stop bits of logic 1. For information about 9-bit</div><div class="t m0 x9 hf y43ab ff3 fs5 fc0 sc0 ls0 ws0">data mode, refer to <span class="fc1">8- and 9-bit data modes</span>. For the remainder of this discussion, assume</div><div class="t m0 x9 hf y43ac ff3 fs5 fc0 sc0 ls0 ws0">the UART is configured for normal 8-bit data mode.</div><div class="t m0 x9 hf y43ad ff3 fs5 fc0 sc0 ls0 ws0">After receiving the stop bit into the receive shifter, and provided the receive data register</div><div class="t m0 x9 hf y43ae ff3 fs5 fc0 sc0 ls0 ws0">is not already full, the data character is transferred to the receive data register and the</div><div class="t m0 x9 hf y43af ff3 fs5 fc0 sc0 ls0 ws0">receive data register full (UART_S1[RDRF]) status flag is set. If UART_S1[RDRF] was</div><div class="t m0 x9 hf y43b0 ff3 fs5 fc0 sc0 ls0 ws0">already set indicating the receive data register (buffer) was already full, the overrun (OR)</div><div class="t m0 x9 hf y43b1 ff3 fs5 fc0 sc0 ls0 ws0">status flag is set and the new data is lost. Because the UART receiver is double-buffered,</div><div class="t m0 x9 hf y43b2 ff3 fs5 fc0 sc0 ls0 ws0">the program has one full character time after UART_S1[RDRF] is set before the data in</div><div class="t m0 x9 hf y43b3 ff3 fs5 fc0 sc0 ls0 ws0">the receive data buffer must be read to avoid a receiver overrun.</div><div class="t m0 x9 hf y43b4 ff3 fs5 fc0 sc0 ls0 ws0">When a program detects that the receive data register is full (UART_S1[RDRF] = 1), it</div><div class="t m0 x9 hf y43b5 ff3 fs5 fc0 sc0 ls0 ws0">gets the data from the receive data register by reading UART_D. The UART_S1[RDRF]</div><div class="t m0 x9 hf y43b6 ff3 fs5 fc0 sc0 ls0 ws0">flag is cleared automatically by a two-step sequence normally satisfied in the course of</div><div class="t m0 x9 hf y43b7 ff3 fs5 fc0 sc0 ls0 ws0">the user&apos;s program that manages receive data. Refer to <span class="fc1">Interrupts and status flags</span> for more</div><div class="t m0 x9 hf y43b8 ff3 fs5 fc0 sc0 ls0 ws0">details about flag clearing.</div><div class="t m0 x9 h10 ydd ff1 fs4 fc0 sc0 ls0 ws0">Functional description</div><div class="t m0 x8 h6 y9 ff1 fs3 fc0 sc0 ls0 ws0">KL25 Sub-Family Reference Manual, Rev. 3, September 2012</div><div class="t m0 x9 h7 ya ff2 fs4 fc0 sc0 ls0 ws0">764<span class="_ _113"> </span>Freescale Semiconductor, Inc.</div><a class="l" href="#pf301" data-dest-detail='[769,"XYZ",null,632.3,null]'><div class="d m1" style="border-style:none;position:absolute;left:163.242000px;bottom:306.400000px;width:132.202000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pf2ff" data-dest-detail='[767,"XYZ",null,622.7,null]'><div class="d m1" style="border-style:none;position:absolute;left:360.544000px;bottom:97.600000px;width:144.256000px;height:14.000000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
